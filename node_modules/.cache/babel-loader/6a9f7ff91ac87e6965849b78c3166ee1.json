{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  function Field() {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Field).apply(this, arguments));\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.destroy = false;\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n    _this.touched = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n\n    _this.cancelRegister = function () {\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc();\n      }\n\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n\n    _this.getNamePath = function () {\n      var name = _this.props.name;\n      var _this$context$prefixN = _this.context.prefixName,\n          prefixName = _this$context$prefixN === void 0 ? [] : _this$context$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props$rules = _this.props.rules,\n          rules = _this$props$rules === void 0 ? [] : _this$props$rules;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(_this.context);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (_this.destroy) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props = _this.props,\n          shouldUpdate = _this$props.shouldUpdate,\n          _this$props$dependenc = _this$props.dependencies,\n          dependencies = _this$props$dependenc === void 0 ? [] : _this$props$dependenc,\n          onReset = _this$props.onReset;\n      var getFieldsValue = _this.context.getFieldsValue;\n      var values = getFieldsValue(true);\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue();\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n\n            if (onReset) {\n              onReset();\n            }\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, values, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath);\n\n            if (namePathMatch || dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          /**\n           * - If `namePath` exists in `namePathList`, means it's related value and should update.\n           * - If `dependencies` exists in `namePathList`, means upstream trigger update.\n           * - If `shouldUpdate` provided, use customize logic to update the field\n           *   - else to check if value changed\n           */\n          if (namePathMatch || dependencies.some(function (dependency) {\n            return containsNamePath(namePathList, getNamePath(dependency));\n          }) || requireUpdate(shouldUpdate, prevStore, values, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      var _this$props2 = _this.props,\n          _this$props2$validate = _this$props2.validateFirst,\n          validateFirst = _this$props2$validate === void 0 ? false : _this$props2$validate,\n          messageVariables = _this$props2.messageVariables;\n\n      var _ref2 = options || {},\n          triggerName = _ref2.triggerName;\n\n      var namePath = _this.getNamePath();\n\n      var filteredRules = _this.getRules();\n\n      if (triggerName) {\n        filteredRules = filteredRules.filter(function (rule) {\n          var validateTrigger = rule.validateTrigger;\n\n          if (!validateTrigger) {\n            return true;\n          }\n\n          var triggerList = toArray(validateTrigger);\n          return triggerList.includes(triggerName);\n        });\n      }\n\n      var promise = validateRules(namePath, _this.getValue(), filteredRules, options, validateFirst, messageVariables);\n      _this.validatePromise = promise;\n      _this.errors = [];\n      promise.catch(function (e) {\n        return e;\n      }).then(function () {\n        var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        if (_this.validatePromise === promise) {\n          _this.validatePromise = null;\n          _this.errors = errors;\n\n          _this.reRender();\n        }\n      });\n      return promise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    }; // ============================= Child Component =============================\n\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.context)), {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || !React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.context.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props3 = _this.props,\n          trigger = _this$props3.trigger,\n          validateTrigger = _this$props3.validateTrigger,\n          getValueFromEvent = _this$props3.getValueFromEvent,\n          normalize = _this$props3.normalize,\n          valuePropName = _this$props3.valuePropName;\n\n      var namePath = _this.getNamePath();\n\n      var _this$context = _this.context,\n          getInternalHooks = _this$context.getInternalHooks,\n          getFieldsValue = _this$context.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread({}, childProps, _defineProperty({}, valuePropName, value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(validateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    return _this;\n  } // ============================== Subscriptions ==============================\n\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getInternalHooks = this.context.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          registerField = _getInternalHooks2.registerField;\n\n      this.cancelRegisterFunc = registerField(this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.destroy = true;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (this.destroy) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if (React.isValidElement(child)) {\n        returnChildNode = React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  validateTrigger: 'onChange',\n  valuePropName: 'value'\n};\n\nvar WrapperField = function WrapperField(_ref3) {\n  var name = _ref3.name,\n      restProps = _objectWithoutProperties(_ref3, [\"name\"]);\n\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  return React.createElement(Field, Object.assign({\n    key: \"_\".concat((namePath || []).join('_')),\n    name: namePath\n  }, restProps));\n};\n\nexport default WrapperField;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/node_modules/rc-field-form/es/Field.js"],"names":["_objectWithoutProperties","_defineProperty","_toConsumableArray","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","toChildrenArray","warning","React","FieldContext","HOOK_MARK","toArray","validateRules","containsNamePath","defaultGetValueFromEvent","getNamePath","getValue","requireUpdate","shouldUpdate","prev","next","prevValue","nextValue","info","Field","_React$Component","_this","state","resetCount","cancelRegisterFunc","destroy","touched","validatePromise","errors","cancelRegister","name","props","_this$context$prefixN","context","prefixName","undefined","concat","getRules","_this$props$rules","rules","map","rule","refresh","setState","_ref","onStoreChange","prevStore","namePathList","_this$props","_this$props$dependenc","dependencies","onReset","getFieldsValue","values","namePath","curValue","namePathMatch","type","data","validating","Promise","resolve","reRender","dependencyList","some","dependency","relatedFields","options","_this$props2","_this$props2$validate","validateFirst","messageVariables","_ref2","triggerName","filteredRules","validateTrigger","triggerList","includes","promise","catch","e","then","isFieldValidating","isFieldTouched","getErrors","getMeta","prevValidating","meta","getOnlyChild","children","getControlled","isFunction","childList","isValidElement","child","store","childProps","_this$props3","trigger","getValueFromEvent","normalize","valuePropName","_this$context","getInternalHooks","_getInternalHooks","dispatch","value","originTriggerFunc","control","newValue","_len","args","Array","_key","validateTriggerList","originTrigger","componentDidMount","_getInternalHooks2","registerField","componentWillUnmount","forceUpdate","render","_this$getOnlyChild","returnChildNode","cloneElement","createElement","Fragment","Component","contextType","defaultProps","WrapperField","_ref3","restProps","assign","join"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  function Field() {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Field).apply(this, arguments));\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.destroy = false;\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n    _this.touched = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n\n    _this.cancelRegister = function () {\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc();\n      }\n\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n\n    _this.getNamePath = function () {\n      var name = _this.props.name;\n      var _this$context$prefixN = _this.context.prefixName,\n          prefixName = _this$context$prefixN === void 0 ? [] : _this$context$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props$rules = _this.props.rules,\n          rules = _this$props$rules === void 0 ? [] : _this$props$rules;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(_this.context);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (_this.destroy) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props = _this.props,\n          shouldUpdate = _this$props.shouldUpdate,\n          _this$props$dependenc = _this$props.dependencies,\n          dependencies = _this$props$dependenc === void 0 ? [] : _this$props$dependenc,\n          onReset = _this$props.onReset;\n      var getFieldsValue = _this.context.getFieldsValue;\n      var values = getFieldsValue(true);\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue();\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n\n            if (onReset) {\n              onReset();\n            }\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, values, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath);\n\n            if (namePathMatch || dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          /**\n           * - If `namePath` exists in `namePathList`, means it's related value and should update.\n           * - If `dependencies` exists in `namePathList`, means upstream trigger update.\n           * - If `shouldUpdate` provided, use customize logic to update the field\n           *   - else to check if value changed\n           */\n          if (namePathMatch || dependencies.some(function (dependency) {\n            return containsNamePath(namePathList, getNamePath(dependency));\n          }) || requireUpdate(shouldUpdate, prevStore, values, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      var _this$props2 = _this.props,\n          _this$props2$validate = _this$props2.validateFirst,\n          validateFirst = _this$props2$validate === void 0 ? false : _this$props2$validate,\n          messageVariables = _this$props2.messageVariables;\n\n      var _ref2 = options || {},\n          triggerName = _ref2.triggerName;\n\n      var namePath = _this.getNamePath();\n\n      var filteredRules = _this.getRules();\n\n      if (triggerName) {\n        filteredRules = filteredRules.filter(function (rule) {\n          var validateTrigger = rule.validateTrigger;\n\n          if (!validateTrigger) {\n            return true;\n          }\n\n          var triggerList = toArray(validateTrigger);\n          return triggerList.includes(triggerName);\n        });\n      }\n\n      var promise = validateRules(namePath, _this.getValue(), filteredRules, options, validateFirst, messageVariables);\n      _this.validatePromise = promise;\n      _this.errors = [];\n      promise.catch(function (e) {\n        return e;\n      }).then(function () {\n        var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        if (_this.validatePromise === promise) {\n          _this.validatePromise = null;\n          _this.errors = errors;\n\n          _this.reRender();\n        }\n      });\n      return promise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    }; // ============================= Child Component =============================\n\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.context)), {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || !React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.context.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props3 = _this.props,\n          trigger = _this$props3.trigger,\n          validateTrigger = _this$props3.validateTrigger,\n          getValueFromEvent = _this$props3.getValueFromEvent,\n          normalize = _this$props3.normalize,\n          valuePropName = _this$props3.valuePropName;\n\n      var namePath = _this.getNamePath();\n\n      var _this$context = _this.context,\n          getInternalHooks = _this$context.getInternalHooks,\n          getFieldsValue = _this$context.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread({}, childProps, _defineProperty({}, valuePropName, value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(validateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    return _this;\n  } // ============================== Subscriptions ==============================\n\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var getInternalHooks = this.context.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          registerField = _getInternalHooks2.registerField;\n\n      this.cancelRegisterFunc = registerField(this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.destroy = true;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (this.destroy) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if (React.isValidElement(child)) {\n        returnChildNode = React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  validateTrigger: 'onChange',\n  valuePropName: 'value'\n};\n\nvar WrapperField = function WrapperField(_ref3) {\n  var name = _ref3.name,\n      restProps = _objectWithoutProperties(_ref3, [\"name\"]);\n\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  return React.createElement(Field, Object.assign({\n    key: \"_\".concat((namePath || []).join('_')),\n    name: namePath\n  }, restProps));\n};\n\nexport default WrapperField;"]},"metadata":{},"sourceType":"module"}