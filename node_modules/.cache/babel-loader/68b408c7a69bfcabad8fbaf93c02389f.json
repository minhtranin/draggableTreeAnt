{"ast":null,"code":"import _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/MyModal.js\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select, Button } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css';\nvar TreeNode = TreeSelect.TreeNode;\nvar Option = Select.Option;\nvar Search = Input.Search;\n\nvar Model = function Model() {\n  var focusDiv = useRef();\n  var treeData = [{\n    title: \"input\",\n    description: 'Visible to Everyone',\n    key: \"0\",\n    default: 'My folder name 1',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      key: \"0-0\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: ['lucy'],\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: 'action',\n      key: \"0-2\",\n      isLeaf: true\n    }]\n  }];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(treeData),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var onChange = function onChange(value) {// setValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    treeIcon: true,\n    treeDefaultExpandAll: true,\n    className: \"g-tree-select\",\n    value: value,\n    dropdownRender: function dropdownRender(prop) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: '254px'\n        },\n        onChange: onChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          console.log('handleAddFolder');\n          setValue(function (vl) {\n            console.log(data);\n            return vl;\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, \"Add New Folder\")), prop);\n    },\n    style: {\n      marginBottom: 8,\n      width: '100%'\n    },\n    dropdownStyle: {\n      height: 400,\n      overflow: 'auto'\n    },\n    placeholder: \"Please select\",\n    open: open,\n    onChange: function onChange(vl) {\n      setValue(vl);\n      setOpen(false);\n    },\n    onFocus: function onFocus() {\n      setOpen(true);\n    },\n    onBlur: function onBlur() {\n      console.log('+++++');\n    } // onFocus={() => setOpen(!open)}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, data.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(TreeNode, {\n      key: item.key,\n      value: item.default,\n      icon: /*#__PURE__*/React.createElement(FolderFilled, {\n        style: {\n          fontSize: '20px',\n          paddingTop: '10px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }),\n      isLeaf: !!item.default,\n      selectable: !!item.default,\n      title: /*#__PURE__*/React.createElement(React.Fragment, null, !item.default ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n        style: {\n          width: '202px'\n        },\n        onClick: function onClick() {\n          focusDiv.current.focus();\n        },\n        ref: focusDiv,\n        placeholder: \"Enter new folder name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '10px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, item.default), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '35px',\n          fontSize: '11px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, item.description))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }\n    }, !item.default && item.children.map(function (chil, index) {\n      return /*#__PURE__*/React.createElement(TreeNode, {\n        key: chil.key,\n        selectable: false,\n        title: /*#__PURE__*/React.createElement(React.Fragment, null, chil.title === 'select' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n          defaultValue: chil.default,\n          style: {\n            width: '202px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: \"all\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }\n        }, \"Visible to Everyone\"), /*#__PURE__*/React.createElement(Option, {\n          value: \"one\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 31\n          }\n        }, \"Visible to specific users\"))) : chil.title === 'selectall' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n          defaultValue: chil.default,\n          mode: \"multiple\",\n          style: {\n            width: '202px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: \"jack\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 31\n          }\n        }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n          value: \"lucy\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 31\n          }\n        }, \"Lucy\"))) : chil.title === 'action' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"g-action\",\n          style: {\n            width: '202px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(SaveTwoTone, {\n          twoToneColor: \"#44AEA0\",\n          style: {\n            fontSize: '25px'\n          },\n          onClick: function onClick() {\n            console.log('handleSave');\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(DeleteTwoTone, {\n          twoToneColor: \"#D3455C\",\n          style: {\n            fontSize: '25px'\n          },\n          onClick: function onClick() {\n            console.log('handleDelete');\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 31\n          }\n        }))) : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 26\n        }\n      });\n    }));\n  })));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/MyModal.js"],"names":["React","useState","useRef","useEffect","TreeSelect","Input","Select","Button","FolderFilled","DeleteTwoTone","SaveTwoTone","TreeNode","Option","Search","Model","focusDiv","treeData","title","description","key","default","children","isLeaf","open","setOpen","value","setValue","data","setData","onChange","width","margin","prop","console","log","vl","marginBottom","height","overflow","map","item","index","fontSize","paddingTop","current","focus","paddingLeft","chil"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select, Button } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css'\nconst { TreeNode } = TreeSelect;\nconst { Option } = Select;\nconst { Search } = Input;\n\n\nconst Model = () => {\n  const focusDiv = useRef();\n  const treeData = [\n    {\n      title: \"input\",\n      description: 'Visible to Everyone',\n      key: \"0\",\n      default: 'My folder name 1',\n      children: [\n        {\n          title: \"select\",\n          default: 'all',\n          key: \"0-0\",\n          isLeaf: true\n        },\n        {\n          title: \"selectall\",\n          default: ['lucy'],\n          key: \"0-1\",\n          isLeaf: true\n        },\n        {\n          title: 'action',\n          key: \"0-2\",\n          isLeaf: true\n        }\n      ]\n    },\n  ];\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(null);\n  const [data, setData] = useState(treeData)\n  const onChange = (value) => {\n    // setValue(value);\n  };\n\n  return (\n    <div style={{ width: \"400px\", margin: '30px auto' }}>\n      <TreeSelect\n        treeIcon\n        treeDefaultExpandAll\n        className='g-tree-select'\n        value={value}\n        dropdownRender={(prop) => {\n          return <>\n            <div className=\"g-search-header\">\n              <Search\n                placeholder=\"Search\"\n                style={{ width: '254px' }}\n                onChange={onChange}\n              />\n              <Button\n                onClick={() => {\n                  console.log('handleAddFolder')\n                  setValue((vl) => {\n                    console.log(data)\n                    return vl\n                  })\n                }}\n              >\n                Add New Folder\n              </Button>\n            </div>\n            {prop}\n          </>\n        }}\n        style={{ marginBottom: 8, width: '100%' }}\n        dropdownStyle={{ height: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n        open={open}\n        onChange={(vl) => {\n          setValue(vl)\n          setOpen(false)\n        }}\n        onFocus={() => {\n          setOpen(true)\n        }}\n        onBlur={() => {\n          console.log('+++++')\n        }}\n      // onFocus={() => setOpen(!open)}\n      >\n        {\n          data.map((item, index) => {\n            return <TreeNode\n              key={item.key}\n              value={item.default}\n              icon={<FolderFilled style={{ fontSize: '20px', paddingTop: '10px' }} />}\n              isLeaf={!!item.default}\n              selectable={!!item.default}\n              title={\n                <>\n                  {\n                    !item.default ? <>\n                      <Input\n                        style={{ width: '202px' }}\n                        onClick={() => {\n                          focusDiv.current.focus()\n                        }}\n                        ref={focusDiv} placeholder=\"Enter new folder name\" />\n                    </> : <>\n                        <span style={{ paddingLeft: '10px'}}>{item.default}</span>\n                        <br></br>\n                        <span style={{ paddingLeft: '35px', fontSize: '11px' }}>{item.description}</span>\n                    </>\n                  }\n                </>\n              }\n            >\n              {!item.default &&\n                item.children.map((chil, index) => {\n                  return <TreeNode\n                    key={chil.key}\n                    selectable={false}\n      \n                    title={\n                      <>\n                        {\n                          chil.title === 'select' ? <>\n                            <Select\n                              defaultValue={chil.default}\n                              style={{ width: '202px' }}\n                            >\n                              <Option value=\"all\">Visible to Everyone</Option>\n                              <Option value=\"one\">Visible to specific users</Option>\n                            </Select>\n                          </> : chil.title === 'selectall' ? <>\n                            <Select\n                              defaultValue={chil.default}\n                              mode=\"multiple\"\n                              style={{ width: '202px' }}\n                            >\n                              <Option value=\"jack\">Jack</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                            </Select>\n                          </> : chil.title === 'action' ? <>\n                            <div\n                              className=\"g-action\"\n                              style={{\n                                width: '202px',\n                              }}\n                            >\n                              <SaveTwoTone\n                                twoToneColor=\"#44AEA0\"\n                                style={{ fontSize: '25px' }}\n                                onClick={() => {\n                                  console.log('handleSave')\n                                }}\n                              />\n                              <DeleteTwoTone\n                                twoToneColor=\"#D3455C\"\n                                style={{ fontSize: '25px' }}\n                                onClick={() => {\n                                  console.log('handleDelete')\n                                }}\n                              />\n\n                            </div>\n                          </> : ''\n                        }\n                      </>\n                    }\n                  />\n                })\n              }\n            </TreeNode>\n          })\n        }\n      </TreeSelect>\n    </div>\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}