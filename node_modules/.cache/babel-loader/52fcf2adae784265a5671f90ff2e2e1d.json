{"ast":null,"code":"import _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/MyModal.js\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select, Button } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css';\nvar TreeNode = TreeSelect.TreeNode;\nvar Option = Select.Option;\nvar Search = Input.Search;\n\nvar Model = function Model() {\n  var focusDiv = useRef();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var onChange = function onChange(value) {// setValue(value);\n  };\n\n  var treeData = [{\n    title: \"input\",\n    key: \"0\",\n    default: '',\n    children: [{\n      title: \"all\",\n      default: 'all',\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: \"select\",\n      default: ['lucy'],\n      key: \"0-2\",\n      isLeaf: true\n    }, {\n      title: 'ACTION',\n      key: 'action',\n      isLeaf: true\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    treeIcon: true,\n    treeDefaultExpandAll: true,\n    className: \"g-tree-select\",\n    dropdownRender: function dropdownRender(prop) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: '254px'\n        },\n        onChange: onChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          console.log('handleAddFolder');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Add New Folder\")), prop);\n    },\n    style: {\n      marginBottom: 8,\n      width: '100%'\n    },\n    dropdownStyle: {\n      height: 400,\n      overflow: 'auto'\n    },\n    placeholder: \"Please select\",\n    open: open // onFocus={() => setOpen(!open)}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TreeNode, {\n    key: 1,\n    icon: /*#__PURE__*/React.createElement(FolderFilled, {\n      style: {\n        fontSize: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }),\n    selectable: false,\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n      style: {\n        width: '202px'\n      },\n      onClick: function onClick() {\n        focusDiv.current.focus();\n      },\n      ref: focusDiv,\n      placeholder: \"Enter new folder name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TreeNode, {\n    key: 2 // icon={<FolderFilled />}\n    ,\n    selectable: false,\n    title: /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"all\",\n      style: {\n        width: '202px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"all\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Visible to Everyone\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"one\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Visible to specific users\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TreeNode, {\n    key: 3 // icon={<FolderFilled />}\n    ,\n    selectable: false,\n    title: /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"lucy\",\n      mode: \"multiple\",\n      style: {\n        width: '202px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"jack\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"lucy\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Lucy\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TreeNode, {\n    key: 4 // icon={<FolderFilled />}\n    ,\n    selectable: false,\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '202px',\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        gap: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SaveTwoTone, {\n      twoToneColor: \"#44AEA0\",\n      style: {\n        fontSize: '25px'\n      },\n      onClick: function onClick() {\n        console.log('handleSave');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DeleteTwoTone, {\n      twoToneColor: \"#D3455C\",\n      style: {\n        fontSize: '25px'\n      },\n      onClick: function onClick() {\n        console.log('handleDelete');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/MyModal.js"],"names":["React","useState","useRef","useEffect","TreeSelect","Input","Select","Button","FolderFilled","DeleteTwoTone","SaveTwoTone","TreeNode","Option","Search","Model","focusDiv","open","setOpen","onChange","value","treeData","title","key","default","children","isLeaf","width","margin","prop","console","log","marginBottom","height","overflow","fontSize","current","focus","display","flexDirection","gap"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select, Button } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css'\nconst { TreeNode } = TreeSelect;\nconst { Option } = Select;\nconst { Search } = Input;\n\n\nconst Model = () => {\n  const focusDiv = useRef();\n  const [open, setOpen] = useState(true);\n  const onChange = (value) => {\n    // setValue(value);\n  };\n\n\n  const treeData = [\n    {\n      title: \"input\",\n      key: \"0\",\n      default: '',\n      children: [\n        {\n          title: \"all\",\n          default: 'all',\n          key: \"0-1\",\n          isLeaf: true\n        },\n        {\n          title: \"select\",\n          default: ['lucy'],\n          key: \"0-2\",\n          isLeaf: true\n        },\n        {\n          title: 'ACTION',\n          key:'action',\n          isLeaf: true\n        }\n      ]\n    },\n  ];\n\n  return (\n    <div style={{ width: \"400px\", margin: '30px auto' }}>\n      <TreeSelect\n        treeIcon\n        treeDefaultExpandAll\n        className='g-tree-select'\n        dropdownRender={(prop) => {\n          return <>\n          <div className=\"g-search-header\">\n            <Search\n              placeholder=\"Search\"\n              style={{ width: '254px' }}\n              onChange={onChange}\n            />\n            <Button\n              onClick={() => {\n                console.log('handleAddFolder')\n              }}\n            >\n              Add New Folder\n            </Button>\n            </div>\n            {prop}\n          </>\n        }}\n        style={{ marginBottom: 8, width: '100%' }}\n        dropdownStyle={{ height: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n        open={open}\n      // onFocus={() => setOpen(!open)}\n      >\n        <TreeNode\n          key={1}\n          icon={<FolderFilled style={{ fontSize: '20px' }}/>}\n          selectable={false}\n          title={\n            <>\n              <Input\n                style={{ width: '202px' }}\n                onClick={() => {\n                  focusDiv.current.focus()\n                }}\n                ref={focusDiv} placeholder=\"Enter new folder name\" />\n            </>\n          }\n        >\n          <TreeNode\n            key={2}\n            // icon={<FolderFilled />}\n            selectable={false}\n            title={\n              <Select\n                defaultValue=\"all\"\n                style={{ width: '202px' }}\n              >\n                <Option value=\"all\">Visible to Everyone</Option>\n                <Option value=\"one\">Visible to specific users</Option>\n              </Select>\n            }\n          />\n          <TreeNode\n            key={3}\n            // icon={<FolderFilled />}\n            selectable={false}\n            title={\n              <Select\n                defaultValue=\"lucy\"\n                mode=\"multiple\"\n                style={{ width: '202px' }}\n              >\n                <Option value=\"jack\">Jack</Option>\n                <Option value=\"lucy\">Lucy</Option>\n              </Select>\n            }\n          />\n          <TreeNode\n            key={4}\n            // icon={<FolderFilled />}\n            selectable={false}\n            title={\n              <div\n                style={{\n                  width: '202px',\n                  display: 'flex',\n                  flexDirection: 'row-reverse',\n                  gap: '20px'\n                }}\n              >\n                <SaveTwoTone\n                  twoToneColor=\"#44AEA0\"\n                  style={{ fontSize: '25px' }}\n                  onClick={() => {\n                    console.log('handleSave')\n                  }}\n                />\n                <DeleteTwoTone\n                  twoToneColor=\"#D3455C\"\n                  style={{ fontSize: '25px' }}\n                  onClick={() => {\n                    console.log('handleDelete')\n                  }}\n                />\n\n              </div>\n            }\n          />\n        </TreeNode>\n      </TreeSelect>\n    </div>\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}