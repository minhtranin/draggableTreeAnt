{"ast":null,"code":"import _toConsumableArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/Dragable.js\";\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Tree, Input, Select, Button } from 'antd';\nimport { FolderFilled } from \"@ant-design/icons\";\nimport InputAction from './component/InputAction';\nvar Search = Input.Search;\nvar Option = Select.Option;\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar oData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || oData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nvar dataList = [];\n\nvar generateList = function generateList(data) {\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    var key = node.key;\n    dataList.push({\n      key: key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(oData);\n\nvar Folder = function Folder(_ref) {\n  var name = _ref.name,\n      type = _ref.type,\n      handleSelect = _ref.handleSelect;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"g-folder\",\n    onClick: function onClick() {\n      if (typeof handleSelect === 'function') {\n        handleSelect();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: \"10px\",\n      fontSize: \"11px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, type === 'all' ? 'Visible to Everyone' : 'Visible to specific users')));\n};\n\nvar treeData = [{\n  title: \"label\",\n  name: 'My folder name 1',\n  allowers: ['lucy'],\n  type: 'one' // children: [\n  //     {\n  //         title: \"label\",\n  //         name: 'My folder name 1-1',\n  //         allowers: [],\n  //         type: 'all',\n  //         children: [\n  //             {\n  //                 title: \"label\",\n  //                 name: 'My folder name 1-1-1',\n  //                 allowers: [],\n  //                 type: 'all',\n  //             },\n  //         ]\n  //     },\n  //     {\n  //         title: \"label\",\n  //         name: 'My folder name 1-2',\n  //         allowers: [],\n  //         type: 'all',\n  //     },\n  // ],\n\n} // {\n//     title: \"label\",\n//     name: 'My folder name 2',\n//     allowers: ['lucy'],\n//     type: 'one',\n// },\n];\n\nvar SearchTree = function SearchTree() {\n  var _value$allowers;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchValue = _useState2[0],\n      setSearchValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gData = _useState6[0],\n      setGData = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      save = _useState10[0],\n      setSave = _useState10[1];\n\n  useEffect(function () {\n    var newestData = makeup(treeData);\n    setGData(newestData);\n  }, []);\n\n  var handleSelectTree = function handleSelectTree(info) {\n    setOpen(false);\n    setSave(false);\n    setValue({\n      value: info.name,\n      label: info.name,\n      type: info.type,\n      allowers: info.allowers\n    });\n  };\n\n  var makeup = function makeup(d) {\n    var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n    debugger;\n    var result = d.map(function (node, parentIdx) {\n      var type = node.type,\n          allowers = node.allowers,\n          name = node.name,\n          children = node.children,\n          title = node.title;\n      var newTitle = title;\n      var newChildren = children;\n\n      if (title === 'input') {\n        newTitle = /*#__PURE__*/React.createElement(InputAction, {\n          key: \"\".concat(level, \"-\").concat(parentIdx),\n          type: type,\n          allowers: allowers,\n          handleSave: function handleSave() {\n            console.log('handle save', \"\".concat(level, \"-\").concat(parentIdx));\n            return \"\".concat(level, \"-\").concat(parentIdx);\n          },\n          handleDel: function handleDel(e) {\n            console.log('handle delete', \"\".concat(level, \"-\").concat(parentIdx), gData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 28\n          }\n        });\n      }\n\n      if (title === 'label') {\n        newTitle = /*#__PURE__*/React.createElement(Folder, {\n          name: name,\n          type: type,\n          handleSelect: function handleSelect() {\n            return handleSelectTree({\n              name: name,\n              allowers: allowers,\n              type: type\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 28\n          }\n        });\n      }\n\n      if (children) {\n        newChildren = makeup(children, \"\".concat(level, \"-\").concat(parentIdx));\n      }\n\n      return _objectSpread({\n        title: newTitle,\n        key: \"\".concat(level, \"-\").concat(parentIdx),\n        name: name,\n        allowers: allowers,\n        type: type,\n        icon: /*#__PURE__*/React.createElement(FolderFilled, {\n          style: {\n            fontSize: \"20px\",\n            paddingTop: \"10px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }\n        })\n      }, children ? {\n        children: newChildren\n      } : {});\n    });\n    return result;\n  };\n\n  useEffect(function () {\n    if (gData.length) {// console.log(gData)\n    }\n  }, [gData]);\n\n  var onDragEnter = function onDragEnter(info) {};\n\n  var onDrop = function onDrop(info) {\n    setValue(undefined);\n    setSave(false);\n    var dropKey = info.node.key;\n    var dragKey = info.dragNode.key;\n    var dropPos = info.node.pos.split('-');\n    var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n    var loop = function loop(data, key, callback) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].key === key) {\n          return callback(data[i], i, data);\n        }\n\n        if (data[i].children) {\n          loop(data[i].children, key, callback);\n        }\n      }\n    };\n\n    var data = _toConsumableArray(gData);\n\n    var dragObj;\n    loop(data, dragKey, function (item, index, arr) {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n\n    if (!info.dropToGap) {\n      loop(data, dropKey, function (item) {\n        item.children = item.children || [];\n        item.children.unshift(dragObj);\n      });\n    } else if ((info.node.props.children || []).length > 0 && info.node.props.expanded && dropPosition === 1) {\n      loop(data, dropKey, function (item) {\n        item.children = item.children || [];\n        item.children.unshift(dragObj);\n      });\n    } else {\n      var ar;\n      var i;\n      loop(data, dropKey, function (item, index, arr) {\n        ar = arr;\n        i = index;\n      });\n\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    }\n\n    setGData(makeup(data));\n  };\n\n  var handleAddFolder = function handleAddFolder() {\n    var data = [{\n      title: \"input\",\n      name: '',\n      allowers: [],\n      type: 'one'\n    }].concat(_toConsumableArray(gData));\n    setGData(_toConsumableArray(makeup(data)));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"460px\",\n      margin: '30px auto',\n      border: '1px solid #ded7d7',\n      padding: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelInValue: true,\n    open: open,\n    style: {\n      width: 448\n    },\n    onClick: function onClick(e) {\n      var className = e.target.className;\n      var targetClass = ['ant-select-selection-search-input'];\n\n      if (targetClass.includes(className)) {\n        setOpen(!open);\n      }\n    },\n    dropdownStyle: {\n      overflow: 'auto',\n      height: '460px'\n    },\n    value: value,\n    placeholder: \"Please select\",\n    dropdownRender: function dropdownRender(menu) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: '269px'\n        },\n        onChange: function onChange(ev) {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: handleAddFolder,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }\n      }, \"Add New Folder\")), /*#__PURE__*/React.createElement(Tree, {\n        className: \"draggable-tree\",\n        defaultExpandAll: true,\n        draggable: true,\n        showIcon: true,\n        blockNode: true,\n        onDragEnter: onDragEnter,\n        onDrop: onDrop,\n        treeData: makeup(gData),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }));\n    },\n    onChange: function onChange(ev) {\n      console.log(ev);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"lucy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, \"Lucy (101)\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"g-action-parent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      setValue(undefined);\n      setSave(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: !value,\n    onClick: function onClick() {\n      return setSave(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, \"Save\"))), save && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"460px\",\n      margin: '30px auto',\n      border: '1px solid #ded7d7',\n      padding: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, \"Folder info\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, value.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, value.type === 'all' ? 'Visible to Everyone' : 'Visible to specific users'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, !!(value === null || value === void 0 ? void 0 : (_value$allowers = value.allowers) === null || _value$allowers === void 0 ? void 0 : _value$allowers.length) && \"Visible to \".concat(value.allowers.toString())))));\n};\n\nexport default SearchTree;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/Dragable.js"],"names":["React","useCallback","useEffect","useState","Tree","Input","Select","Button","FolderFilled","InputAction","Search","Option","x","y","z","oData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","Folder","name","type","handleSelect","paddingLeft","fontSize","treeData","allowers","SearchTree","searchValue","setSearchValue","open","setOpen","gData","setGData","undefined","value","setValue","save","setSave","newestData","makeup","handleSelectTree","info","label","d","result","map","parentIdx","newTitle","newChildren","console","log","e","icon","paddingTop","onDragEnter","onDrop","dropKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","callback","dragObj","item","arr","splice","dropToGap","unshift","props","expanded","ar","handleAddFolder","width","margin","border","padding","className","target","targetClass","includes","overflow","height","menu","ev","toString"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Tree, Input, Select, Button } from 'antd';\nimport { FolderFilled } from \"@ant-design/icons\";\nimport InputAction from './component/InputAction'\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst oData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n    const preKey = _preKey || '0';\n    const tns = _tns || oData;\n\n    const children = [];\n    for (let i = 0; i < x; i++) {\n        const key = `${preKey}-${i}`;\n        tns.push({ title: key, key });\n        if (i < y) {\n            children.push(key);\n        }\n    }\n    if (_level < 0) {\n        return tns;\n    }\n    const level = _level - 1;\n    children.forEach((key, index) => {\n        tns[index].children = [];\n        return generateData(level, key, tns[index].children);\n    });\n};\n\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const { key } = node;\n        dataList.push({ key, title: key });\n        if (node.children) {\n            generateList(node.children);\n        }\n    }\n};\ngenerateList(oData);\n\nconst Folder = ({ name, type, handleSelect }) => {\n    return <div\n        className=\"g-folder\"\n        onClick={() => {\n            if (typeof handleSelect === 'function') {\n                handleSelect()\n            }\n        }}\n    >\n        <div>\n            <span style={{ paddingLeft: \"10px\" }}>\n                {name}\n            </span>\n        </div>\n        <div>\n            <span style={{\n                paddingLeft: \"10px\", fontSize: \"11px\"\n            }}>\n                {type === 'all' ? 'Visible to Everyone' : 'Visible to specific users'}\n            </span>\n\n        </div>\n    </div>\n}\n\nconst treeData = [\n    {\n        title: \"label\",\n        name: 'My folder name 1',\n        allowers: ['lucy'],\n        type: 'one',\n        // children: [\n        //     {\n        //         title: \"label\",\n        //         name: 'My folder name 1-1',\n        //         allowers: [],\n        //         type: 'all',\n        //         children: [\n        //             {\n        //                 title: \"label\",\n        //                 name: 'My folder name 1-1-1',\n        //                 allowers: [],\n        //                 type: 'all',\n        //             },\n        //         ]\n        //     },\n        //     {\n        //         title: \"label\",\n        //         name: 'My folder name 1-2',\n        //         allowers: [],\n        //         type: 'all',\n        //     },\n        // ],\n    },\n    // {\n    //     title: \"label\",\n    //     name: 'My folder name 2',\n    //     allowers: ['lucy'],\n    //     type: 'one',\n    // },\n];\n\nconst SearchTree = () => {\n    const [searchValue, setSearchValue] = useState('')\n    const [open, setOpen] = useState(false)\n    const [gData, setGData] = useState([])\n    const [value, setValue] = useState(undefined)\n    const [save, setSave] = useState(false)\n\n    useEffect(() => {\n        const newestData = makeup(treeData)\n        setGData(newestData)\n    }, [])\n\n    const handleSelectTree = ((info) => {\n        setOpen(false)\n        setSave(false)\n        setValue({\n            value: info.name,\n            label: info.name,\n            type: info.type,\n            allowers: info.allowers\n        })\n    })\n\n    const makeup = (d, level = '0') => {\n        debugger\n        const result = d.map((node, parentIdx) => {\n            const { type, allowers, name, children, title } = node\n            let newTitle = title\n            let newChildren = children\n            if (title === 'input') {\n                newTitle = <InputAction key={`${level}-${parentIdx}`} type={type} allowers={allowers}\n                handleSave={() => {\n                    console.log('handle save', `${level}-${parentIdx}`)\n                    return `${level}-${parentIdx}`\n                }}\n                handleDel={(e) => {\n                    console.log('handle delete', `${level}-${parentIdx}`, gData)\n                }}\n            />\n            }\n            if (title === 'label') {\n                newTitle = <Folder name={name} type={type} handleSelect={() => handleSelectTree({\n                    name,\n                    allowers,\n                    type\n                })} />\n            }\n            if (children) {\n                newChildren = makeup(children, `${level}-${parentIdx}`)\n            }\n            return {\n                title: newTitle,\n                key: `${level}-${parentIdx}`,\n                name,\n                allowers,\n                type,\n                icon: <FolderFilled style={{ fontSize: \"20px\", paddingTop: \"10px\" }} />,\n                ...children ? {\n                    children: newChildren,\n                } : {}\n            }\n        })\n        return result\n    }\n\n    useEffect(() => {\n        if(gData.length) {\n            // console.log(gData)\n        }\n    }, [gData])\n\n    const onDragEnter = info => {\n    };\n\n    const onDrop = info => {\n        setValue(undefined)\n        setSave(false)\n        const dropKey = info.node.key;\n        const dragKey = info.dragNode.key;\n        const dropPos = info.node.pos.split('-');\n        const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n        const loop = (data, key, callback) => {\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].key === key) {\n                    return callback(data[i], i, data);\n                }\n                if (data[i].children) {\n                    loop(data[i].children, key, callback);\n                }\n            }\n        };\n        const data = [...gData];\n\n        let dragObj;\n        loop(data, dragKey, (item, index, arr) => {\n            arr.splice(index, 1);\n            dragObj = item;\n        });\n\n        if (!info.dropToGap) {\n            loop(data, dropKey, item => {\n                item.children = item.children || [];\n                item.children.unshift(dragObj);\n            });\n        } else if (\n            (info.node.props.children || []).length > 0 &&\n            info.node.props.expanded &&\n            dropPosition === 1\n        ) {\n            loop(data, dropKey, item => {\n                item.children = item.children || [];\n                item.children.unshift(dragObj);\n            });\n        } else {\n            let ar;\n            let i;\n            loop(data, dropKey, (item, index, arr) => {\n                ar = arr;\n                i = index;\n            });\n            if (dropPosition === -1) {\n                ar.splice(i, 0, dragObj);\n            } else {\n                ar.splice(i + 1, 0, dragObj);\n            }\n        }\n        setGData(makeup(data))\n    };\n\n    const handleAddFolder = () => {\n        const data = [\n            {\n                title: \"input\",\n                name: '',\n                allowers: [],\n                type: 'one',\n            },\n            ...gData\n        ];\n\n        setGData([...makeup(data)])\n    }\n\n    return (\n        <>\n        <div style={{ width: \"460px\", margin: '30px auto', border: '1px solid #ded7d7', padding: '5px' }}>\n            <Select\n                labelInValue\n                open={open}\n                style={{ width: 448 }}\n                onClick={(e) => {\n                    const { className } = e.target\n                    const targetClass = ['ant-select-selection-search-input']\n                    if (targetClass.includes(className)) {\n                        setOpen(!open)\n                    }\n                }}\n                dropdownStyle={{\n                    overflow: 'auto',\n                    height: '460px',\n                }}\n                value={value}\n                placeholder=\"Please select\"\n                dropdownRender={(menu) => {\n                    return <div\n                        style={{\n                        }}\n                    >\n                        <div className=\"g-search-header\">\n                            <Search\n                                placeholder=\"Search\"\n                                style={{ width: '269px' }}\n                                onChange={(ev) => {\n                                }}\n                            />\n                            <Button\n                                onClick={handleAddFolder}\n                            >\n                                Add New Folder\n                            </Button>\n                        </div>\n                        <Tree\n                            className=\"draggable-tree\"\n                            defaultExpandAll\n                            draggable\n                            showIcon\n                            blockNode\n                            onDragEnter={onDragEnter}\n                            onDrop={onDrop}\n                            treeData={makeup(gData)}\n                        />\n                        {/* {menu} */}\n                    </div>\n                }}\n                onChange={(ev) => {\n                    console.log(ev)\n                }}\n            >\n                <Option value=\"lucy\">Lucy (101)</Option>\n            </Select>\n            <div className=\"g-action-parent\">\n                <Button\n                    onClick={() => {\n                        setValue(undefined)\n                        setSave(false)\n                    }}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    disabled={!value}\n                    onClick={() => setSave(true)}\n                >\n                    Save\n                </Button>\n            </div>\n        </div>\n       {save && <div style={{ width: \"460px\", margin: '30px auto', border: '1px solid #ded7d7', padding: '5px' }}>\n            <h2>Folder info</h2>\n        <div>\n            <span>{value.label}</span>\n            <br></br>\n            <span>{value.type === 'all' ? 'Visible to Everyone' : 'Visible to specific users'}</span>\n            <br></br>\n            <span>{!!value?.allowers?.length && `Visible to ${value.allowers.toString()}`}</span>\n        </div>\n        </div>}\n        </>\n    );\n}\n\nexport default SearchTree"]},"metadata":{},"sourceType":"module"}