{"ast":null,"code":"import _toConsumableArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/MyModal.js\";\n\nimport React, { useState, useRef, useEffect, createRef } from \"react\";\nimport { TreeSelect, Input, Select, Button, Tree } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport \"./styles.css\";\nvar TreeNode = Tree.TreeNode;\nvar Option = Select.Option;\nvar Search = Input.Search;\n\nvar Model = function Model() {\n  var treeData = [{\n    title: \"label\",\n    description: \"Visible to Everyone\",\n    key: \"0\",\n    default: \"My folder name 1\",\n    children: [{\n      title: \"select\",\n      default: \"all\",\n      key: \"0-0\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: [\"lucy\"],\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: \"action\",\n      key: \"0-2\",\n      isLeaf: true\n    }]\n  }];\n  var newDataDefault = {\n    title: \"input\",\n    description: \"Visible to Everyone\",\n    default: \"\",\n    children: [{\n      title: \"select\",\n      default: \"all\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: [],\n      isLeaf: true\n    }, {\n      title: \"action\",\n      isLeaf: true\n    }]\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(treeData),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      search = _useState8[0],\n      setSearch = _useState8[1];\n\n  var arrLength = data.length;\n  var elRefs = useRef([]);\n  useEffect(function () {\n    if (elRefs.current.length !== arrLength) {\n      elRefs.current = Array(arrLength).fill().map(function (_, i) {\n        return elRefs.current[i] || createRef();\n      });\n    }\n  }, [data, arrLength]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: \"30px auto\",\n      border: \"1px solid grey\",\n      padding: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    treeIcon: true,\n    treeDefaultExpandAll: true,\n    listHeight: 500,\n    showSearch: true,\n    className: \"g-tree-select\",\n    value: value,\n    onInputKeyDown: function onInputKeyDown(e) {\n      e.preventDefault();\n    },\n    filterTreeNode: function filterTreeNode(text, item) {\n      console.log(item);\n\n      if (!data[item.value]) {\n        return false; // const [idParent, idChildren] = item.value.split('-')\n        // if (!data[idParent].children[idChildren].default) return false\n        // console.log(data[idParent].children[idChildren].default)\n        // return data[idParent].children[idChildren].default.toLowerCase().indexOf(text.toLowerCase()) !== -1\n      }\n\n      if (!data[item.value].default) return false;\n      return data[item.value].default.toLowerCase().indexOf(text.toLowerCase()) !== -1 || data[item.value].description.toLowerCase().indexOf(text.toLowerCase()) !== -1;\n    },\n    searchValue: search,\n    dropdownRender: function dropdownRender(prop) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: \"254px\"\n        },\n        onChange: function onChange(ev) {\n          var textSearch = ev.target.value;\n          setSearch(textSearch);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          var newData = [newDataDefault].concat(_toConsumableArray(data));\n          setData(newData);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, \"Add New Folder\")), prop);\n    },\n    style: {\n      marginBottom: 8,\n      width: \"100%\"\n    },\n    placeholder: \"Please select\",\n    open: open,\n    onChange: function onChange(vl) {\n      setValue(vl);\n      setOpen(false);\n    },\n    onFocus: function onFocus(e) {\n      setOpen(true);\n      e.preventDefault();\n    },\n    onBlur: function onBlur() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, data.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(TreeNode, {\n      key: index,\n      value: index,\n      icon: /*#__PURE__*/React.createElement(FolderFilled, {\n        style: {\n          fontSize: \"20px\",\n          paddingTop: \"10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }),\n      isLeaf: item.title === \"label\",\n      selectable: item.title === \"label\",\n      title: /*#__PURE__*/React.createElement(React.Fragment, null, item.title === \"input\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n        style: {\n          width: \"202px\"\n        },\n        onClick: function onClick() {\n          if (elRefs.current[index].current) {\n            elRefs.current[index].current.focus();\n          }\n        },\n        ref: elRefs.current[index],\n        placeholder: \"Enter new folder name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: \"10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 23\n        }\n      }, item.default), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: \"35px\",\n          fontSize: \"11px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }\n      }, item.description))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, item.title === \"input\" && item.children.map(function (chil, cid) {\n      return /*#__PURE__*/React.createElement(TreeNode, {\n        key: \"\".concat(index, \"-\").concat(cid),\n        selectable: false,\n        value: \"\".concat(index, \"-\").concat(cid),\n        title: /*#__PURE__*/React.createElement(React.Fragment, null, chil.title === \"select\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n          defaultValue: chil.default,\n          style: {\n            width: \"202px\"\n          },\n          onChange: function onChange(sc) {\n            var newData = data;\n            newData[index].children[cid].default = sc;\n            newData[index].children[cid + 1].default = [];\n            var children = newData[index].children.filter(function (e) {\n              return e.title !== \"selectall\";\n            });\n\n            if (sc === \"one\") {\n              newData[index].children = children;\n              newData[index].description = \"Visible to specific users\";\n            }\n\n            if (sc === \"all\") {\n              newData[index].description = \"Visible to Everyone\";\n              newData[index].children = [children[0], newDataDefault.children[1], children[1]];\n            }\n\n            setData(_toConsumableArray(newData));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: \"all\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }\n        }, \"Visible to Everyone\"), /*#__PURE__*/React.createElement(Option, {\n          value: \"one\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }\n        }, \"Visible to specific users\"))) : chil.title === \"selectall\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n          defaultValue: chil.default,\n          placeholder: \"Select a name\",\n          mode: \"multiple\",\n          style: {\n            width: \"202px\"\n          },\n          onChange: function onChange(sla) {\n            var newData = data;\n            newData[index].children[cid].default = sla;\n            setData(_toConsumableArray(newData));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: \"jack\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }\n        }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n          value: \"lucy\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }\n        }, \"Lucy\"))) : chil.title === \"action\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"g-action\",\n          style: {\n            width: \"202px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(SaveTwoTone, {\n          twoToneColor: \"#44AEA0\",\n          style: {\n            fontSize: \"25px\"\n          },\n          onClick: function onClick() {\n            var newData = data;\n            var folderName = elRefs.current[index].current.state.value;\n            if (!folderName) return;\n            newData[index].title = \"label\";\n            newData[index].default = folderName;\n            setData(_toConsumableArray(newData));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(DeleteTwoTone, {\n          twoToneColor: \"#D3455C\",\n          style: {\n            fontSize: \"25px\"\n          },\n          onClick: function onClick() {\n            var newData = data.filter(function (_, i) {\n              return index !== i;\n            });\n            setData(_toConsumableArray(newData));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }\n        }))) : \"\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      });\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      gap: \"15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      var newData = [newDataDefault].concat(_toConsumableArray(data));\n      setData(newData);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      var newData = [newDataDefault].concat(_toConsumableArray(data));\n      setData(newData);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/MyModal.js"],"names":["React","useState","useRef","useEffect","createRef","TreeSelect","Input","Select","Button","Tree","FolderFilled","DeleteTwoTone","SaveTwoTone","TreeNode","Option","Search","Model","treeData","title","description","key","default","children","isLeaf","newDataDefault","open","setOpen","undefined","value","setValue","data","setData","search","setSearch","arrLength","length","elRefs","current","Array","fill","map","_","i","width","margin","border","padding","e","preventDefault","text","item","console","log","toLowerCase","indexOf","prop","ev","textSearch","target","newData","marginBottom","vl","index","fontSize","paddingTop","focus","paddingLeft","chil","cid","sc","filter","sla","folderName","state","display","justifyContent","gap"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, createRef } from \"react\";\nimport { TreeSelect, Input, Select, Button, Tree } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport \"./styles.css\";\nconst { TreeNode } = Tree;\nconst { Option } = Select;\nconst { Search } = Input;\n\nconst Model = () => {\n  const treeData = [\n    {\n      title: \"label\",\n      description: \"Visible to Everyone\",\n      key: \"0\",\n      default: \"My folder name 1\",\n      children: [\n        {\n          title: \"select\",\n          default: \"all\",\n          key: \"0-0\",\n          isLeaf: true\n        },\n        {\n          title: \"selectall\",\n          default: [\"lucy\"],\n          key: \"0-1\",\n          isLeaf: true\n        },\n        {\n          title: \"action\",\n          key: \"0-2\",\n          isLeaf: true\n        }\n      ]\n    }\n  ];\n  const newDataDefault = {\n    title: \"input\",\n    description: \"Visible to Everyone\",\n    default: \"\",\n    children: [\n      {\n        title: \"select\",\n        default: \"all\",\n        isLeaf: true\n      },\n      {\n        title: \"selectall\",\n        default: [],\n        isLeaf: true\n      },\n      {\n        title: \"action\",\n        isLeaf: true\n      }\n    ]\n  };\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(undefined);\n  const [data, setData] = useState(treeData);\n  const [search, setSearch] = useState(undefined);\n  const arrLength = data.length;\n  const elRefs = useRef([]);\n\n  useEffect(() => {\n    if (elRefs.current.length !== arrLength) {\n      elRefs.current = Array(arrLength)\n        .fill()\n        .map((_, i) => elRefs.current[i] || createRef());\n    }\n  }, [data, arrLength]);\n\n  return (\n    <div\n      style={{\n        width: \"400px\",\n        margin: \"30px auto\",\n        border: \"1px solid grey\",\n        padding: \"5px\"\n      }}\n    >\n      <TreeSelect\n        treeIcon\n        treeDefaultExpandAll\n        listHeight={500}\n        showSearch\n        className=\"g-tree-select\"\n        value={value}\n        onInputKeyDown={(e) => {\n          e.preventDefault();\n        }}\n        filterTreeNode={(text, item) => {\n          console.log(item);\n          if (!data[item.value]) {\n            return false;\n            // const [idParent, idChildren] = item.value.split('-')\n            // if (!data[idParent].children[idChildren].default) return false\n            // console.log(data[idParent].children[idChildren].default)\n            // return data[idParent].children[idChildren].default.toLowerCase().indexOf(text.toLowerCase()) !== -1\n          }\n          if (!data[item.value].default) return false;\n          return (\n            data[item.value].default\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) !== -1 ||\n            data[item.value].description\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) !== -1\n          );\n        }}\n        searchValue={search}\n        dropdownRender={(prop) => {\n          return (\n            <>\n              <div className=\"g-search-header\">\n                <Search\n                  placeholder=\"Search\"\n                  style={{ width: \"254px\" }}\n                  onChange={(ev) => {\n                    const textSearch = ev.target.value;\n                    setSearch(textSearch);\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    const newData = [newDataDefault, ...data];\n                    setData(newData);\n                  }}\n                >\n                  Add New Folder\n                </Button>\n              </div>\n              {prop}\n            </>\n          );\n        }}\n        style={{ marginBottom: 8, width: \"100%\" }}\n        placeholder=\"Please select\"\n        open={open}\n        onChange={(vl) => {\n          setValue(vl);\n          setOpen(false);\n        }}\n        onFocus={(e) => {\n          setOpen(true);\n          e.preventDefault();\n        }}\n        onBlur={() => {}}\n      >\n        {/* <Tree\n         showIcon={false}\n         selectable={false}\n         draggable\n         blockNode\n         className=\"draggable-tree\"\n         key=\"000\"\n         title={'qweqwe'}\n         onDragEnter={() => {\n           console.log('++++')\n         }}\n          onDrop={() => {\n            console.log('----')\n          }}\n        //  isLeaf\n        > */}\n        {data.map((item, index) => {\n          return (\n            <TreeNode\n              key={index}\n              value={index}\n              icon={\n                <FolderFilled\n                  style={{ fontSize: \"20px\", paddingTop: \"10px\" }}\n                />\n              }\n              isLeaf={item.title === \"label\"}\n              selectable={item.title === \"label\"}\n              title={\n                <>\n                  {item.title === \"input\" ? (\n                    <>\n                      <Input\n                        style={{ width: \"202px\" }}\n                        onClick={() => {\n                          if (elRefs.current[index].current) {\n                            elRefs.current[index].current.focus();\n                          }\n                        }}\n                        ref={elRefs.current[index]}\n                        placeholder=\"Enter new folder name\"\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <span style={{ paddingLeft: \"10px\" }}>\n                        {item.default}\n                      </span>\n                      <br></br>\n                      <span style={{ paddingLeft: \"35px\", fontSize: \"11px\" }}>\n                        {item.description}\n                      </span>\n                    </>\n                  )}\n                </>\n              }\n            >\n              {item.title === \"input\" &&\n                item.children.map((chil, cid) => {\n                  return (\n                    <TreeNode\n                      key={`${index}-${cid}`}\n                      selectable={false}\n                      value={`${index}-${cid}`}\n                      title={\n                        <>\n                          {chil.title === \"select\" ? (\n                            <>\n                              <Select\n                                defaultValue={chil.default}\n                                style={{ width: \"202px\" }}\n                                onChange={(sc) => {\n                                  const newData = data;\n                                  newData[index].children[cid].default = sc;\n                                  newData[index].children[cid + 1].default = [];\n                                  const children = newData[\n                                    index\n                                  ].children.filter(\n                                    (e) => e.title !== \"selectall\"\n                                  );\n                                  if (sc === \"one\") {\n                                    newData[index].children = children;\n                                    newData[index].description =\n                                      \"Visible to specific users\";\n                                  }\n                                  if (sc === \"all\") {\n                                    newData[index].description =\n                                      \"Visible to Everyone\";\n                                    newData[index].children = [\n                                      children[0],\n                                      newDataDefault.children[1],\n                                      children[1]\n                                    ];\n                                  }\n                                  setData([...newData]);\n                                }}\n                              >\n                                <Option value=\"all\">Visible to Everyone</Option>\n                                <Option value=\"one\">\n                                  Visible to specific users\n                                </Option>\n                              </Select>\n                            </>\n                          ) : chil.title === \"selectall\" ? (\n                            <>\n                              <Select\n                                defaultValue={chil.default}\n                                placeholder=\"Select a name\"\n                                mode=\"multiple\"\n                                style={{ width: \"202px\" }}\n                                onChange={(sla) => {\n                                  const newData = data;\n                                  newData[index].children[cid].default = sla;\n                                  setData([...newData]);\n                                }}\n                              >\n                                <Option value=\"jack\">Jack</Option>\n                                <Option value=\"lucy\">Lucy</Option>\n                              </Select>\n                            </>\n                          ) : chil.title === \"action\" ? (\n                            <>\n                              <div\n                                className=\"g-action\"\n                                style={{\n                                  width: \"202px\"\n                                }}\n                              >\n                                <SaveTwoTone\n                                  twoToneColor=\"#44AEA0\"\n                                  style={{ fontSize: \"25px\" }}\n                                  onClick={() => {\n                                    const newData = data;\n                                    const folderName =\n                                      elRefs.current[index].current.state.value;\n                                    if (!folderName) return;\n                                    newData[index].title = \"label\";\n                                    newData[index].default = folderName;\n                                    setData([...newData]);\n                                  }}\n                                />\n                                <DeleteTwoTone\n                                  twoToneColor=\"#D3455C\"\n                                  style={{ fontSize: \"25px\" }}\n                                  onClick={() => {\n                                    const newData = data.filter(\n                                      (_, i) => index !== i\n                                    );\n                                    setData([...newData]);\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            \"\"\n                          )}\n                        </>\n                      }\n                    />\n                  );\n                })}\n            </TreeNode>\n          );\n        })}\n        {/* </Tree> */}\n      </TreeSelect>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: \"15px\"\n        }}\n      >\n        <Button\n          onClick={() => {\n            const newData = [newDataDefault, ...data];\n            setData(newData);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            const newData = [newDataDefault, ...data];\n            setData(newData);\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}