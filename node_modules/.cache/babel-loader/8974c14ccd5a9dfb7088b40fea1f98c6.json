{"ast":null,"code":"import _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/MyModal.js\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select, Button } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css';\nvar TreeNode = TreeSelect.TreeNode;\nvar Option = Select.Option;\nvar Search = Input.Search;\n\nvar Model = function Model() {\n  var focusDiv = useRef();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var onChange = function onChange(value) {// setValue(value);\n  };\n\n  var treeData = [{\n    title: \"input\",\n    key: \"0\",\n    default: '',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: ['lucy'],\n      key: \"0-2\",\n      isLeaf: true\n    }, {\n      title: 'action',\n      key: 'action',\n      isLeaf: true\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    treeIcon: true,\n    treeDefaultExpandAll: true,\n    className: \"g-tree-select\",\n    dropdownRender: function dropdownRender(prop) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: '254px'\n        },\n        onChange: onChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          console.log('handleAddFolder');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"Add New Folder\")), prop);\n    },\n    style: {\n      marginBottom: 8,\n      width: '100%'\n    },\n    dropdownStyle: {\n      height: 400,\n      overflow: 'auto'\n    },\n    placeholder: \"Please select\",\n    open: open // onFocus={() => setOpen(!open)}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, treeData.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(TreeNode, {\n      key: item.key,\n      icon: /*#__PURE__*/React.createElement(FolderFilled, {\n        style: {\n          fontSize: '20px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }),\n      isLeaf: !!item.default,\n      selectable: !!item.default,\n      title: /*#__PURE__*/React.createElement(React.Fragment, null, item.title === 'input' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n        style: {\n          width: '202px'\n        },\n        onClick: function onClick() {\n          focusDiv.current.focus();\n        },\n        ref: focusDiv,\n        placeholder: \"Enter new folder name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }\n      })) : item.default),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }\n    }, !item.default && item.children.map(function (chil, index) {\n      return /*#__PURE__*/React.createElement(TreeNode, {\n        key: chil.key,\n        selectable: false,\n        title: /*#__PURE__*/React.createElement(React.Fragment, null, chil.title === 'select' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n          defaultValue: chil.default,\n          style: {\n            width: '202px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: \"all\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 31\n          }\n        }, \"Visible to Everyone\"), /*#__PURE__*/React.createElement(Option, {\n          value: \"one\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 31\n          }\n        }, \"Visible to specific users\"))) : chil.title === 'selectall' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n          defaultValue: chil.default,\n          mode: \"multiple\",\n          style: {\n            width: '202px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Option, {\n          value: \"jack\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 31\n          }\n        }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n          value: \"lucy\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 31\n          }\n        }, \"Lucy\"))) : chil.title === 'action' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"g-action\",\n          style: {\n            width: '202px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(SaveTwoTone, {\n          twoToneColor: \"#44AEA0\",\n          style: {\n            fontSize: '25px'\n          },\n          onClick: function onClick() {\n            console.log('handleSave');\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(DeleteTwoTone, {\n          twoToneColor: \"#D3455C\",\n          style: {\n            fontSize: '25px'\n          },\n          onClick: function onClick() {\n            console.log('handleDelete');\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 31\n          }\n        }))) : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 26\n        }\n      });\n    }));\n  })));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/MyModal.js"],"names":["React","useState","useRef","useEffect","TreeSelect","Input","Select","Button","FolderFilled","DeleteTwoTone","SaveTwoTone","TreeNode","Option","Search","Model","focusDiv","open","setOpen","onChange","value","treeData","title","key","default","children","isLeaf","width","margin","prop","console","log","marginBottom","height","overflow","map","item","index","fontSize","current","focus","chil"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select, Button } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css'\nconst { TreeNode } = TreeSelect;\nconst { Option } = Select;\nconst { Search } = Input;\n\n\nconst Model = () => {\n  const focusDiv = useRef();\n  const [open, setOpen] = useState(true);\n  const onChange = (value) => {\n    // setValue(value);\n  };\n\n\n  const treeData = [\n    {\n      title: \"input\",\n      key: \"0\",\n      default: '',\n      children: [\n        {\n          title: \"select\",\n          default: 'all',\n          key: \"0-1\",\n          isLeaf: true\n        },\n        {\n          title: \"selectall\",\n          default: ['lucy'],\n          key: \"0-2\",\n          isLeaf: true\n        },\n        {\n          title: 'action',\n          key: 'action',\n          isLeaf: true\n        }\n      ]\n    },\n  ];\n\n  return (\n    <div style={{ width: \"400px\", margin: '30px auto' }}>\n      <TreeSelect\n        treeIcon\n        treeDefaultExpandAll\n        className='g-tree-select'\n        dropdownRender={(prop) => {\n          return <>\n            <div className=\"g-search-header\">\n              <Search\n                placeholder=\"Search\"\n                style={{ width: '254px' }}\n                onChange={onChange}\n              />\n              <Button\n                onClick={() => {\n                  console.log('handleAddFolder')\n                }}\n              >\n                Add New Folder\n              </Button>\n            </div>\n            {prop}\n          </>\n        }}\n        style={{ marginBottom: 8, width: '100%' }}\n        dropdownStyle={{ height: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n        open={open}\n      // onFocus={() => setOpen(!open)}\n      >\n        {\n          treeData.map((item, index) => {\n            return <TreeNode\n              key={item.key}\n              icon={<FolderFilled style={{ fontSize: '20px' }} />}\n              isLeaf={!!item.default}\n              selectable={!!item.default}\n              title={\n                <>\n                  {\n                    item.title === 'input' ? <>\n                      <Input\n                        style={{ width: '202px' }}\n                        onClick={() => {\n                          focusDiv.current.focus()\n                        }}\n                        ref={focusDiv} placeholder=\"Enter new folder name\" />\n                    </> : item.default\n                  }\n                </>\n              }\n            >\n              {!item.default &&\n                item.children.map((chil, index) => {\n                  return <TreeNode\n                    key={chil.key}\n                    selectable={false}\n      \n                    title={\n                      <>\n                        {\n                          chil.title === 'select' ? <>\n                            <Select\n                              defaultValue={chil.default}\n                              style={{ width: '202px' }}\n                            >\n                              <Option value=\"all\">Visible to Everyone</Option>\n                              <Option value=\"one\">Visible to specific users</Option>\n                            </Select>\n                          </> : chil.title === 'selectall' ? <>\n                            <Select\n                              defaultValue={chil.default}\n                              mode=\"multiple\"\n                              style={{ width: '202px' }}\n                            >\n                              <Option value=\"jack\">Jack</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                            </Select>\n                          </> : chil.title === 'action' ? <>\n                            <div\n                              className=\"g-action\"\n                              style={{\n                                width: '202px',\n                              }}\n                            >\n                              <SaveTwoTone\n                                twoToneColor=\"#44AEA0\"\n                                style={{ fontSize: '25px' }}\n                                onClick={() => {\n                                  console.log('handleSave')\n                                }}\n                              />\n                              <DeleteTwoTone\n                                twoToneColor=\"#D3455C\"\n                                style={{ fontSize: '25px' }}\n                                onClick={() => {\n                                  console.log('handleDelete')\n                                }}\n                              />\n\n                            </div>\n                          </> : ''\n                        }\n                      </>\n                    }\n                  />\n                })\n              }\n            </TreeNode>\n          })\n        }\n      </TreeSelect>\n    </div>\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}