{"ast":null,"code":"import _toConsumableArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/MyModal.js\";\n\nimport React, { useState, useRef, useEffect, createRef } from \"react\";\nimport { Input, Select, Button, Tree } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css';\nvar TreeSelect = Tree.TreeSelect,\n    TreeNode = Tree.TreeNode; // const { TreeNode } = TreeSelect;\n\nvar Option = Select.Option;\nvar Search = Input.Search;\n\nvar Model = function Model() {\n  var treeData = [{\n    title: \"label\",\n    description: 'Visible to Everyone',\n    key: \"0\",\n    default: 'My folder name 1',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      key: \"0-0\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: ['lucy'],\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: 'action',\n      key: \"0-2\",\n      isLeaf: true\n    }]\n  }];\n  var newDataDefault = {\n    title: \"input\",\n    description: 'Visible to Everyone',\n    default: '',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: [],\n      isLeaf: true\n    }, {\n      title: 'action',\n      isLeaf: true\n    }]\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(treeData),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      search = _useState8[0],\n      setSearch = _useState8[1];\n\n  var arrLength = data.length;\n  var elRefs = useRef([]);\n  useEffect(function () {\n    if (elRefs.current.length !== arrLength) {\n      elRefs.current = Array(arrLength).fill().map(function (_, i) {\n        return elRefs.current[i] || createRef();\n      });\n    }\n  }, [data, arrLength]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tree, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TreeNode, {\n    key: \"000\",\n    value: \"000\",\n    selectable: true,\n    title: /*#__PURE__*/React.createElement(TreeSelect, {\n      treeIcon: true,\n      treeDefaultExpandAll: true,\n      listHeight: 500,\n      showSearch: true,\n      className: \"g-tree-select\",\n      value: value,\n      onInputKeyDown: function onInputKeyDown(e) {\n        e.preventDefault();\n      },\n      filterTreeNode: function filterTreeNode(text, item) {\n        console.log(item);\n\n        if (!data[item.value]) {\n          return false; // const [idParent, idChildren] = item.value.split('-')\n          // if (!data[idParent].children[idChildren].default) return false\n          // console.log(data[idParent].children[idChildren].default)\n          // return data[idParent].children[idChildren].default.toLowerCase().indexOf(text.toLowerCase()) !== -1\n        }\n\n        if (!data[item.value].default) return false;\n        return data[item.value].default.toLowerCase().indexOf(text.toLowerCase()) !== -1 || data[item.value].description.toLowerCase().indexOf(text.toLowerCase()) !== -1;\n      },\n      searchValue: search,\n      dropdownRender: function dropdownRender(prop) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"g-search-header\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Search, {\n          placeholder: \"Search\",\n          style: {\n            width: '254px'\n          },\n          onChange: function onChange(ev) {\n            var textSearch = ev.target.value;\n            setSearch(textSearch);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: function onClick() {\n            var newData = [newDataDefault].concat(_toConsumableArray(data));\n            setData(newData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }, \"Add New Folder\")), prop);\n      },\n      style: {\n        marginBottom: 8,\n        width: '100%'\n      },\n      placeholder: \"Please select\",\n      open: open,\n      onChange: function onChange(vl) {\n        setValue(vl);\n        setOpen(false);\n      },\n      onFocus: function onFocus(e) {\n        setOpen(true);\n        e.preventDefault();\n      },\n      onBlur: function onBlur() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }\n    }, data.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(TreeNode, {\n        key: index,\n        value: index,\n        icon: /*#__PURE__*/React.createElement(FolderFilled, {\n          style: {\n            fontSize: '20px',\n            paddingTop: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }\n        }),\n        isLeaf: item.title === 'label',\n        selectable: item.title === 'label',\n        title: /*#__PURE__*/React.createElement(React.Fragment, null, item.title === 'input' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n          style: {\n            width: '202px'\n          },\n          onClick: function onClick() {\n            if (elRefs.current[index].current) {\n              elRefs.current[index].current.focus();\n            }\n          },\n          ref: elRefs.current[index],\n          placeholder: \"Enter new folder name\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 23\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            paddingLeft: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }\n        }, item.default), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            paddingLeft: '35px',\n            fontSize: '11px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }\n        }, item.description))),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 20\n        }\n      }, item.title === 'input' && item.children.map(function (chil, cid) {\n        return /*#__PURE__*/React.createElement(TreeNode, {\n          key: \"\".concat(index, \"-\").concat(cid),\n          selectable: false,\n          value: \"\".concat(index, \"-\").concat(cid),\n          title: /*#__PURE__*/React.createElement(React.Fragment, null, chil.title === 'select' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n            defaultValue: chil.default,\n            style: {\n              width: '202px'\n            },\n            onChange: function onChange(sc) {\n              var newData = data;\n              newData[index].children[cid].default = sc;\n              newData[index].children[cid + 1].default = [];\n              var children = newData[index].children.filter(function (e) {\n                return e.title !== 'selectall';\n              });\n\n              if (sc === 'one') {\n                newData[index].children = children;\n                newData[index].description = 'Visible to specific users';\n              }\n\n              if (sc === 'all') {\n                newData[index].description = 'Visible to Everyone';\n                newData[index].children = [children[0], newDataDefault.children[1], children[1]];\n              }\n\n              setData(_toConsumableArray(newData));\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Option, {\n            value: \"all\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 31\n            }\n          }, \"Visible to Everyone\"), /*#__PURE__*/React.createElement(Option, {\n            value: \"one\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 31\n            }\n          }, \"Visible to specific users\"))) : chil.title === 'selectall' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n            defaultValue: chil.default,\n            className: \"exception\",\n            placeholder: \"Select a name\",\n            mode: \"multiple\",\n            style: {\n              width: '202px'\n            },\n            onChange: function onChange(sla) {\n              var newData = data;\n              newData[index].children[cid].default = sla;\n              setData(_toConsumableArray(newData));\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Option, {\n            value: \"jack\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 31\n            }\n          }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n            value: \"lucy\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 31\n            }\n          }, \"Lucy\"))) : chil.title === 'action' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"g-action\",\n            style: {\n              width: '202px'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(SaveTwoTone, {\n            twoToneColor: \"#44AEA0\",\n            style: {\n              fontSize: '25px'\n            },\n            onClick: function onClick() {\n              var newData = data;\n              var folderName = elRefs.current[index].current.state.value;\n              if (!folderName) return;\n              newData[index].title = 'label';\n              newData[index].default = folderName;\n              setData(_toConsumableArray(newData));\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(DeleteTwoTone, {\n            twoToneColor: \"#D3455C\",\n            style: {\n              fontSize: '25px'\n            },\n            onClick: function onClick() {\n              var newData = data.filter(function (_, i) {\n                return index !== i;\n              });\n              setData(_toConsumableArray(newData));\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 31\n            }\n          }))) : ''),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 26\n          }\n        });\n      }));\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/MyModal.js"],"names":["React","useState","useRef","useEffect","createRef","Input","Select","Button","Tree","FolderFilled","DeleteTwoTone","SaveTwoTone","TreeSelect","TreeNode","Option","Search","Model","treeData","title","description","key","default","children","isLeaf","newDataDefault","open","setOpen","undefined","value","setValue","data","setData","search","setSearch","arrLength","length","elRefs","current","Array","fill","map","_","i","width","margin","e","preventDefault","text","item","console","log","toLowerCase","indexOf","prop","ev","textSearch","target","newData","marginBottom","vl","index","fontSize","paddingTop","focus","paddingLeft","chil","cid","sc","filter","sla","folderName","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,IAAhC,QAA4C,MAA5C;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,QAAyD,mBAAzD;AACA,OAAO,cAAP;AACA,IAAQC,UAAR,GAAiCJ,IAAjC,CAAQI,UAAR;AAAA,IAAoBC,QAApB,GAAiCL,IAAjC,CAAoBK,QAApB,C,CACA;;AACA,IAAQC,MAAR,GAAmBR,MAAnB,CAAQQ,MAAR;AACA,IAAQC,MAAR,GAAmBV,KAAnB,CAAQU,MAAR;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,QAAQ,GAAG,CACf;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,WAAW,EAAE,qBAFf;AAGEC,IAAAA,GAAG,EAAE,GAHP;AAIEC,IAAAA,OAAO,EAAE,kBAJX;AAKEC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,KAAK,EAAE,QADT;AAEEG,MAAAA,OAAO,EAAE,KAFX;AAGED,MAAAA,GAAG,EAAE,KAHP;AAIEG,MAAAA,MAAM,EAAE;AAJV,KADQ,EAOR;AACEL,MAAAA,KAAK,EAAE,WADT;AAEEG,MAAAA,OAAO,EAAE,CAAC,MAAD,CAFX;AAGED,MAAAA,GAAG,EAAE,KAHP;AAIEG,MAAAA,MAAM,EAAE;AAJV,KAPQ,EAaR;AACEL,MAAAA,KAAK,EAAE,QADT;AAEEE,MAAAA,GAAG,EAAE,KAFP;AAGEG,MAAAA,MAAM,EAAE;AAHV,KAbQ;AALZ,GADe,CAAjB;AA2BA,MAAMC,cAAc,GAAG;AACrBN,IAAAA,KAAK,EAAE,OADc;AAErBC,IAAAA,WAAW,EAAE,qBAFQ;AAGrBE,IAAAA,OAAO,EAAE,EAHY;AAIrBC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,KAAK,EAAE,QADT;AAEEG,MAAAA,OAAO,EAAE,KAFX;AAGEE,MAAAA,MAAM,EAAE;AAHV,KADQ,EAMR;AACEL,MAAAA,KAAK,EAAE,WADT;AAEEG,MAAAA,OAAO,EAAE,EAFX;AAGEE,MAAAA,MAAM,EAAE;AAHV,KANQ,EAWR;AACEL,MAAAA,KAAK,EAAE,QADT;AAEEK,MAAAA,MAAM,EAAE;AAFV,KAXQ;AAJW,GAAvB;;AAsBA,kBAAwBtB,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOwB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BzB,QAAQ,CAAC0B,SAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwB5B,QAAQ,CAACgB,QAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4B9B,QAAQ,CAAC0B,SAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,SAAS,GAAGJ,IAAI,CAACK,MAAvB;AACA,MAAMC,MAAM,GAAGlC,MAAM,CAAC,EAAD,CAArB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiC,MAAM,CAACC,OAAP,CAAeF,MAAf,KAA0BD,SAA9B,EAAyC;AACvCE,MAAAA,MAAM,CAACC,OAAP,GAAiBC,KAAK,CAACJ,SAAD,CAAL,CAAiBK,IAAjB,GAAwBC,GAAxB,CAA4B,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUN,MAAM,CAACC,OAAP,CAAeK,CAAf,KAAqBtC,SAAS,EAAxC;AAAA,OAA5B,CAAjB;AACD;AACF,GAJQ,EAIN,CAAC0B,IAAD,EAAOI,SAAP,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAC,KADN;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,UAAU,MAHZ;AAIE,IAAA,KAAK,eACf,oBAAC,UAAD;AACQ,MAAA,QAAQ,MADhB;AAEQ,MAAA,oBAAoB,MAF5B;AAGQ,MAAA,UAAU,EAAE,GAHpB;AAIQ,MAAA,UAAU,MAJlB;AAKQ,MAAA,SAAS,EAAC,eALlB;AAMQ,MAAA,KAAK,EAAEhB,KANf;AAOQ,MAAA,cAAc,EAAE,wBAACiB,CAAD,EAAO;AACrBA,QAAAA,CAAC,CAACC,cAAF;AACD,OATT;AAUQ,MAAA,cAAc,EAAE,wBAACC,IAAD,EAAOC,IAAP,EAAgB;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAI,CAAClB,IAAI,CAACkB,IAAI,CAACpB,KAAN,CAAT,EAAuB;AACrB,iBAAO,KAAP,CADqB,CAErB;AACA;AACA;AACA;AACD;;AACD,YAAI,CAACE,IAAI,CAACkB,IAAI,CAACpB,KAAN,CAAJ,CAAiBP,OAAtB,EAA+B,OAAO,KAAP;AAC/B,eAAOS,IAAI,CAACkB,IAAI,CAACpB,KAAN,CAAJ,CAAiBP,OAAjB,CAAyB8B,WAAzB,GAAuCC,OAAvC,CAA+CL,IAAI,CAACI,WAAL,EAA/C,MAAuE,CAAC,CAAxE,IACPrB,IAAI,CAACkB,IAAI,CAACpB,KAAN,CAAJ,CAAiBT,WAAjB,CAA6BgC,WAA7B,GAA2CC,OAA3C,CAAmDL,IAAI,CAACI,WAAL,EAAnD,MAA2E,CAAC,CAD5E;AAED,OAtBT;AAuBQ,MAAA,WAAW,EAAEnB,MAvBrB;AAwBQ,MAAA,cAAc,EAAE,wBAACqB,IAAD,EAAU;AACxB,4BAAO,uDACL;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AACE,UAAA,WAAW,EAAC,QADd;AAEE,UAAA,KAAK,EAAE;AAAEV,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,QAAQ,EAAE,kBAACW,EAAD,EAAQ;AAChB,gBAAMC,UAAU,GAAGD,EAAE,CAACE,MAAH,CAAU5B,KAA7B;AACAK,YAAAA,SAAS,CAACsB,UAAD,CAAT;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eASE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAME,OAAO,IAAIjC,cAAJ,4BAAsBM,IAAtB,EAAb;AACAC,YAAAA,OAAO,CAAC0B,OAAD,CAAP;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATF,CADK,EAmBJJ,IAnBI,CAAP;AAqBD,OA9CT;AA+CQ,MAAA,KAAK,EAAE;AAAEK,QAAAA,YAAY,EAAE,CAAhB;AAAmBf,QAAAA,KAAK,EAAE;AAA1B,OA/Cf;AAgDQ,MAAA,WAAW,EAAC,eAhDpB;AAiDQ,MAAA,IAAI,EAAElB,IAjDd;AAkDQ,MAAA,QAAQ,EAAE,kBAACkC,EAAD,EAAQ;AAChB9B,QAAAA,QAAQ,CAAC8B,EAAD,CAAR;AACAjC,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OArDT;AAsDQ,MAAA,OAAO,EAAE,iBAACmB,CAAD,EAAO;AACdnB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAmB,QAAAA,CAAC,CAACC,cAAF;AACD,OAzDT;AA0DQ,MAAA,MAAM,EAAE,kBAAM,CACb,CA3DT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA8DUhB,IAAI,CAACU,GAAL,CAAS,UAACQ,IAAD,EAAOY,KAAP,EAAiB;AACxB,0BAAO,oBAAC,QAAD;AACL,QAAA,GAAG,EAAEA,KADA;AAEL,QAAA,KAAK,EAAEA,KAFF;AAGL,QAAA,IAAI,eAAE,oBAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,MAAZ;AAAoBC,YAAAA,UAAU,EAAE;AAAhC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD;AAIL,QAAA,MAAM,EAAEd,IAAI,CAAC9B,KAAL,KAAe,OAJlB;AAKL,QAAA,UAAU,EAAE8B,IAAI,CAAC9B,KAAL,KAAe,OALtB;AAML,QAAA,KAAK,eACH,0CAEI8B,IAAI,CAAC9B,KAAL,KAAe,OAAf,gBAAyB,uDACvB,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AAAEyB,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAGP,MAAM,CAACC,OAAP,CAAeuB,KAAf,EAAsBvB,OAAzB,EAAkC;AAChCD,cAAAA,MAAM,CAACC,OAAP,CAAeuB,KAAf,EAAsBvB,OAAtB,CAA8B0B,KAA9B;AACD;AACF,WANH;AAOE,UAAA,GAAG,EAAE3B,MAAM,CAACC,OAAP,CAAeuB,KAAf,CAPP;AAO8B,UAAA,WAAW,EAAC,uBAP1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB,CAAzB,gBASM,uDACF;AAAM,UAAA,KAAK,EAAE;AAAEI,YAAAA,WAAW,EAAE;AAAf,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsChB,IAAI,CAAC3B,OAA3C,CADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,eAGF;AAAM,UAAA,KAAK,EAAE;AAAE2C,YAAAA,WAAW,EAAE,MAAf;AAAuBH,YAAAA,QAAQ,EAAE;AAAjC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyDb,IAAI,CAAC7B,WAA9D,CAHE,CAXV,CAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA2BJ6B,IAAI,CAAC9B,KAAL,KAAe,OAAf,IACC8B,IAAI,CAAC1B,QAAL,CAAckB,GAAd,CAAkB,UAACyB,IAAD,EAAOC,GAAP,EAAe;AAC/B,4BAAO,oBAAC,QAAD;AACL,UAAA,GAAG,YAAKN,KAAL,cAAcM,GAAd,CADE;AAEL,UAAA,UAAU,EAAE,KAFP;AAGL,UAAA,KAAK,YAAKN,KAAL,cAAcM,GAAd,CAHA;AAIL,UAAA,KAAK,eACH,0CAEID,IAAI,CAAC/C,KAAL,KAAe,QAAf,gBAA0B,uDACxB,oBAAC,MAAD;AACE,YAAA,YAAY,EAAE+C,IAAI,CAAC5C,OADrB;AAEE,YAAA,KAAK,EAAE;AAAEsB,cAAAA,KAAK,EAAE;AAAT,aAFT;AAGE,YAAA,QAAQ,EAAE,kBAACwB,EAAD,EAAQ;AAChB,kBAAMV,OAAO,GAAG3B,IAAhB;AACA2B,cAAAA,OAAO,CAACG,KAAD,CAAP,CAAetC,QAAf,CAAwB4C,GAAxB,EAA6B7C,OAA7B,GAAuC8C,EAAvC;AACAV,cAAAA,OAAO,CAACG,KAAD,CAAP,CAAetC,QAAf,CAAwB4C,GAAG,GAAC,CAA5B,EAA+B7C,OAA/B,GAAyC,EAAzC;AACA,kBAAMC,QAAQ,GAAGmC,OAAO,CAACG,KAAD,CAAP,CAAetC,QAAf,CAAwB8C,MAAxB,CAA+B,UAAAvB,CAAC;AAAA,uBAAIA,CAAC,CAAC3B,KAAF,KAAY,WAAhB;AAAA,eAAhC,CAAjB;;AACA,kBAAIiD,EAAE,KAAK,KAAX,EAAkB;AAChBV,gBAAAA,OAAO,CAACG,KAAD,CAAP,CAAetC,QAAf,GAA0BA,QAA1B;AACAmC,gBAAAA,OAAO,CAACG,KAAD,CAAP,CAAezC,WAAf,GAA6B,2BAA7B;AACD;;AACD,kBAAIgD,EAAE,KAAK,KAAX,EAAkB;AAChBV,gBAAAA,OAAO,CAACG,KAAD,CAAP,CAAezC,WAAf,GAA6B,qBAA7B;AACAsC,gBAAAA,OAAO,CAACG,KAAD,CAAP,CAAetC,QAAf,GAA0B,CACxBA,QAAQ,CAAC,CAAD,CADgB,EAExBE,cAAc,CAACF,QAAf,CAAwB,CAAxB,CAFwB,EAGxBA,QAAQ,CAAC,CAAD,CAHgB,CAA1B;AAKD;;AACDS,cAAAA,OAAO,oBAAK0B,OAAL,EAAP;AAED,aAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAwBE,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAxBF,eAyBE,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAzBF,CADwB,CAA1B,GA4BMQ,IAAI,CAAC/C,KAAL,KAAe,WAAf,gBAA6B,uDACjC,oBAAC,MAAD;AACE,YAAA,YAAY,EAAE+C,IAAI,CAAC5C,OADrB;AAEE,YAAA,SAAS,EAAC,WAFZ;AAGE,YAAA,WAAW,EAAC,eAHd;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,KAAK,EAAE;AAAEsB,cAAAA,KAAK,EAAE;AAAT,aALT;AAME,YAAA,QAAQ,EAAE,kBAAC0B,GAAD,EAAS;AACjB,kBAAMZ,OAAO,GAAG3B,IAAhB;AACA2B,cAAAA,OAAO,CAACG,KAAD,CAAP,CAAetC,QAAf,CAAwB4C,GAAxB,EAA6B7C,OAA7B,GAAuCgD,GAAvC;AACAtC,cAAAA,OAAO,oBAAK0B,OAAL,EAAP;AAED,aAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAaE,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE,oBAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,CADiC,CAA7B,GAiBAQ,IAAI,CAAC/C,KAAL,KAAe,QAAf,gBAA0B,uDAC9B;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,KAAK,EAAE;AACLyB,cAAAA,KAAK,EAAE;AADF,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAME,oBAAC,WAAD;AACE,YAAA,YAAY,EAAC,SADf;AAEE,YAAA,KAAK,EAAE;AAAEkB,cAAAA,QAAQ,EAAE;AAAZ,aAFT;AAGE,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAMJ,OAAO,GAAG3B,IAAhB;AACA,kBAAMwC,UAAU,GAAGlC,MAAM,CAACC,OAAP,CAAeuB,KAAf,EAAsBvB,OAAtB,CAA8BkC,KAA9B,CAAoC3C,KAAvD;AACA,kBAAI,CAAC0C,UAAL,EAAiB;AACjBb,cAAAA,OAAO,CAACG,KAAD,CAAP,CAAe1C,KAAf,GAAuB,OAAvB;AACAuC,cAAAA,OAAO,CAACG,KAAD,CAAP,CAAevC,OAAf,GAAyBiD,UAAzB;AACAvC,cAAAA,OAAO,oBAAK0B,OAAL,EAAP;AACD,aAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAkBE,oBAAC,aAAD;AACE,YAAA,YAAY,EAAC,SADf;AAEE,YAAA,KAAK,EAAE;AAAEI,cAAAA,QAAQ,EAAE;AAAZ,aAFT;AAGE,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAMJ,OAAO,GAAG3B,IAAI,CAACsC,MAAL,CAAY,UAAC3B,CAAD,EAAIC,CAAJ;AAAA,uBAAUkB,KAAK,KAAKlB,CAApB;AAAA,eAAZ,CAAhB;AACAX,cAAAA,OAAO,oBAAK0B,OAAL,EAAP;AACD,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,CAD8B,CAA1B,GA6BA,EA5EV,CALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAsFD,OAvFD,CA5BG,CAAP;AAsHD,KAvHD,CA9DV,CALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAsMD,CArQD;;AAuQA,eAAezC,KAAf","sourcesContent":["import React, { useState, useRef, useEffect, createRef } from \"react\";\nimport { Input, Select, Button, Tree } from \"antd\";\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nimport './styles.css'\nconst { TreeSelect, TreeNode } = Tree\n// const { TreeNode } = TreeSelect;\nconst { Option } = Select;\nconst { Search } = Input;\n\n\nconst Model = () => {\n  const treeData = [\n    {\n      title: \"label\",\n      description: 'Visible to Everyone',\n      key: \"0\",\n      default: 'My folder name 1',\n      children: [\n        {\n          title: \"select\",\n          default: 'all',\n          key: \"0-0\",\n          isLeaf: true\n        },\n        {\n          title: \"selectall\",\n          default: ['lucy'],\n          key: \"0-1\",\n          isLeaf: true\n        },\n        {\n          title: 'action',\n          key: \"0-2\",\n          isLeaf: true\n        }\n      ]\n    },\n  ];\n  const newDataDefault = {\n    title: \"input\",\n    description: 'Visible to Everyone',\n    default: '',\n    children: [\n      {\n        title: \"select\",\n        default: 'all',\n        isLeaf: true\n      },\n      {\n        title: \"selectall\",\n        default: [],\n        isLeaf: true\n      },\n      {\n        title: 'action',\n        isLeaf: true\n      }\n    ]\n  }\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(undefined);\n  const [data, setData] = useState(treeData)\n  const [search, setSearch] = useState(undefined)\n  const arrLength = data.length\n  const elRefs = useRef([])\n\n  useEffect(() => {\n    if (elRefs.current.length !== arrLength) {\n      elRefs.current = Array(arrLength).fill().map((_, i) => elRefs.current[i] || createRef());\n    }\n  }, [data, arrLength])\n\n  return (\n    <div style={{ width: \"400px\", margin: '30px auto' }}>\n      <Tree>\n        <TreeNode\n          key=\"000\"\n          value=\"000\"\n          selectable\n          title={\n<TreeSelect\n        treeIcon\n        treeDefaultExpandAll\n        listHeight={500}\n        showSearch\n        className='g-tree-select'\n        value={value}\n        onInputKeyDown={(e) => {\n          e.preventDefault()\n        }}\n        filterTreeNode={(text, item) => {\n          console.log(item)\n          if (!data[item.value]) {\n            return false\n            // const [idParent, idChildren] = item.value.split('-')\n            // if (!data[idParent].children[idChildren].default) return false\n            // console.log(data[idParent].children[idChildren].default)\n            // return data[idParent].children[idChildren].default.toLowerCase().indexOf(text.toLowerCase()) !== -1\n          }\n          if (!data[item.value].default) return false\n          return data[item.value].default.toLowerCase().indexOf(text.toLowerCase()) !== -1 ||\n          data[item.value].description.toLowerCase().indexOf(text.toLowerCase()) !== -1\n        }}\n        searchValue={search}\n        dropdownRender={(prop) => {\n          return <>\n            <div className=\"g-search-header\">\n              <Search\n                placeholder=\"Search\"\n                style={{ width: '254px' }}\n                onChange={(ev) => {\n                  const textSearch = ev.target.value\n                  setSearch(textSearch) \n                }}\n              />\n              <Button\n                onClick={() => {\n                  const newData = [newDataDefault,...data]\n                  setData(newData)\n                }}\n              >\n                Add New Folder\n              </Button>\n            </div>\n            {prop}\n          </>\n        }}\n        style={{ marginBottom: 8, width: '100%' }}\n        placeholder=\"Please select\"\n        open={open}\n        onChange={(vl) => {\n          setValue(vl)\n          setOpen(false)\n        }}\n        onFocus={(e) => {\n          setOpen(true)\n          e.preventDefault()\n        }}\n        onBlur={() => {\n        }}\n      >\n        {\n          data.map((item, index) => {\n            return <TreeNode\n              key={index}\n              value={index}\n              icon={<FolderFilled style={{ fontSize: '20px', paddingTop: '10px' }} />}\n              isLeaf={item.title === 'label'}\n              selectable={item.title === 'label'}\n              title={\n                <>\n                  {\n                    item.title === 'input' ? <>\n                      <Input\n                        style={{ width: '202px' }}\n                        onClick={() => {\n                          if(elRefs.current[index].current) {\n                            elRefs.current[index].current.focus()\n                          }\n                        }}\n                        ref={elRefs.current[index]} placeholder=\"Enter new folder name\" />\n                    </> : <>\n                        <span style={{ paddingLeft: '10px'}}>{item.default}</span>\n                        <br></br>\n                        <span style={{ paddingLeft: '35px', fontSize: '11px' }}>{item.description}</span>\n                    </>\n                  }\n                </>\n              }\n            >\n              {item.title === 'input' &&\n                item.children.map((chil, cid) => {\n                  return <TreeNode\n                    key={`${index}-${cid}`}\n                    selectable={false}\n                    value={`${index}-${cid}`}\n                    title={\n                      <>\n                        {\n                          chil.title === 'select' ? <>\n                            <Select\n                              defaultValue={chil.default}\n                              style={{ width: '202px' }}\n                              onChange={(sc) => {\n                                const newData = data\n                                newData[index].children[cid].default = sc\n                                newData[index].children[cid+1].default = []\n                                const children = newData[index].children.filter(e => e.title !== 'selectall')\n                                if (sc === 'one') {\n                                  newData[index].children = children\n                                  newData[index].description = 'Visible to specific users'\n                                }\n                                if (sc === 'all') {\n                                  newData[index].description = 'Visible to Everyone'\n                                  newData[index].children = [\n                                    children[0],\n                                    newDataDefault.children[1],\n                                    children[1],\n                                  ]\n                                }\n                                setData([...newData])\n                                \n                              }}\n                            >\n                              <Option value=\"all\">Visible to Everyone</Option>\n                              <Option value=\"one\">Visible to specific users</Option>\n                            </Select>\n                          </> : chil.title === 'selectall' ? <>\n                            <Select\n                              defaultValue={chil.default}\n                              className=\"exception\"\n                              placeholder=\"Select a name\"\n                              mode=\"multiple\"\n                              style={{ width: '202px' }}\n                              onChange={(sla) => {\n                                const newData = data\n                                newData[index].children[cid].default = sla\n                                setData([...newData])\n                                \n                              }}\n                            >\n                              <Option value=\"jack\">Jack</Option>\n                              <Option value=\"lucy\">Lucy</Option>\n                            </Select>\n                          </> : chil.title === 'action' ? <>\n                            <div\n                              className=\"g-action\"\n                              style={{\n                                width: '202px',\n                              }}\n                            >\n                              <SaveTwoTone\n                                twoToneColor=\"#44AEA0\"\n                                style={{ fontSize: '25px' }}\n                                onClick={() => {\n                                  const newData = data\n                                  const folderName = elRefs.current[index].current.state.value\n                                  if (!folderName) return\n                                  newData[index].title = 'label'\n                                  newData[index].default = folderName\n                                  setData([...newData])\n                                }}\n                              />\n                              <DeleteTwoTone\n                                twoToneColor=\"#D3455C\"\n                                style={{ fontSize: '25px' }}\n                                onClick={() => {\n                                  const newData = data.filter((_, i) => index !== i)\n                                  setData([...newData])\n                                }}\n                              />\n\n                            </div>\n                          </> : ''\n                        }\n                      </>\n                    }\n                  />\n                })\n              }\n            </TreeNode>\n          })\n        }\n      </TreeSelect>\n          }\n        >\n        </TreeNode>\n      </Tree>\n    </div>\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}