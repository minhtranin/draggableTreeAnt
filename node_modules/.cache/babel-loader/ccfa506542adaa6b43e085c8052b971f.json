{"ast":null,"code":"import _toConsumableArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/Dragable.js\";\n\nimport { Tree, Input, Select, Button } from 'antd';\nimport React, { useState } from 'react';\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nvar Search = Input.Search;\nvar Option = Select.Option;\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar gData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || gData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nvar dataList = [];\n\nvar generateList = function generateList(data) {\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    var key = node.key;\n    dataList.push({\n      key: key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(gData);\n\nvar getParentKey = function getParentKey(key, tree) {\n  var parentKey;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(function (item) {\n        return item.key === key;\n      })) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nvar SearchTree = function SearchTree() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedKeys = _useState2[0],\n      setExpandedKeys = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchValue = _useState4[0],\n      setSearchValue = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      autoExpandParent = _useState6[0],\n      setAutoExpandParent = _useState6[1];\n\n  var onExpand = function onExpand(expandedkeys) {\n    setExpandedKeys(expandedkeys);\n    setAutoExpandParent(false);\n  };\n\n  var onChange = function onChange(e) {\n    var value = e.target.value;\n    var expandedkeys = dataList.map(function (item) {\n      if (item.title.indexOf(value) > -1) {\n        return getParentKey(item.key, gData);\n      }\n\n      return null;\n    }).filter(function (item, i, self) {\n      return item && self.indexOf(item) === i;\n    });\n    setExpandedKeys(expandedkeys);\n    setSearchValue(value);\n    setAutoExpandParent(true);\n  };\n\n  var loop = function loop(data) {\n    return data.map(function (item, index) {\n      console.log(item);\n      var title = item.title === 'input' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n        style: {\n          width: '202px'\n        } // onClick={() => {\n        //   if(elRefs.current[index].current) {\n        //     elRefs.current[index].current.focus()\n        //   }\n        // }}\n        // ref={elRefs.current[index]}\n        ,\n        placeholder: \"Enter new folder name\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      })) : item.title === 'select' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select //   defaultValue={chil.default}\n      , {\n        style: {\n          width: '202px'\n        } //   onChange={(sc) => {\n        //     const newData = data\n        //     newData[index].children[cid].default = sc\n        //     newData[index].children[cid+1].default = []\n        //     const children = newData[index].children.filter(e => e.title !== 'selectall')\n        //     if (sc === 'one') {\n        //       newData[index].children = children\n        //       newData[index].description = 'Visible to specific users'\n        //     }\n        //     if (sc === 'all') {\n        //       newData[index].description = 'Visible to Everyone'\n        //       newData[index].children = [\n        //         children[0],\n        //         newDataDefault.children[1],\n        //         children[1],\n        //       ]\n        //     }\n        //     setData([...newData])\n        //   }}\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Option, {\n        value: \"all\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, \"Visible to Everyone\"), /*#__PURE__*/React.createElement(Option, {\n        value: \"one\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, \"Visible to specific users\"))) : item.title === 'selectall' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select //   defaultValue={chil.default}\n      , {\n        placeholder: \"Select a name\",\n        mode: \"multiple\",\n        style: {\n          width: '202px'\n        } //   onChange={(sla) => {\n        //     const newData = data\n        //     newData[index].children[cid].default = sla\n        //     setData([...newData])\n        //   }}\n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Option, {\n        value: \"jack\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }\n      }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n        value: \"lucy\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, \"Lucy\"))) : item.title === 'action' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-action\",\n        style: {\n          width: '202px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SaveTwoTone, {\n        twoToneColor: \"#44AEA0\",\n        style: {\n          fontSize: '25px'\n        },\n        onClick: function onClick() {//   const newData = data\n          //   const folderName = elRefs.current[index].current.state.value\n          //   if (!folderName) return\n          //   newData[index].title = 'label'\n          //   newData[index].default = folderName\n          //   setData([...newData])\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(DeleteTwoTone, {\n        twoToneColor: \"#D3455C\",\n        style: {\n          fontSize: '25px'\n        },\n        onClick: function onClick() {\n          var newData = data.filter(function (_, i) {\n            return index !== i;\n          });\n          setData(_toConsumableArray(newData));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '10px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, item.default), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          paddingLeft: '35px',\n          fontSize: '11px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, item.description));\n\n      if (item.children) {\n        return {\n          title: title,\n          key: \"\".concat(index, \"-\").concat(index),\n          children: loop(item.children)\n        };\n      }\n\n      return {\n        title: title,\n        key: index\n      };\n    });\n  };\n\n  var treeData = [{\n    title: \"label\",\n    description: 'Visible to Everyone',\n    key: \"0\",\n    default: 'My folder name 1',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      key: \"0-0\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: ['lucy'],\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: 'action',\n      key: \"0-2\",\n      isLeaf: true\n    }]\n  }];\n\n  var _useState7 = useState(treeData),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var newDataDefault = {\n    title: \"input\",\n    description: 'Visible to Everyone',\n    default: '',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: [],\n      isLeaf: true\n    }, {\n      title: 'action',\n      isLeaf: true\n    }]\n  };\n\n  var _useState9 = useState(undefined),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectValue = _useState10[0],\n      setSelectValue = _useState10[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelInValue: true // defaultValue={{ value: 'lucy' }}\n    ,\n    style: {\n      width: 400\n    },\n    value: selectValue,\n    dropdownRender: function dropdownRender(menu) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: '254px'\n        },\n        onChange: function onChange(ev) {//   const textSearch = ev.target.value\n          //   setSearch(textSearch) \n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          var newData = [newDataDefault].concat(_toConsumableArray(data));\n          setData(newData);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }\n      }, \"Add New Folder\")), /*#__PURE__*/React.createElement(Tree, {\n        draggable: true,\n        blockNode: true,\n        className: \"draggable-tree\",\n        height: 400,\n        defaultExpandAll: true,\n        treeData: loop(data),\n        showIcon: true,\n        icon: /*#__PURE__*/React.createElement(FolderFilled, {\n          style: {\n            fontSize: '20px',\n            paddingTop: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 35\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }), menu);\n    },\n    onChange: function onChange(ev) {\n      console.log(ev);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"lucy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, \"Lucy (101)\")), \",\");\n};\n\nexport default SearchTree;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/Dragable.js"],"names":["Tree","Input","Select","Button","React","useState","FolderFilled","DeleteTwoTone","SaveTwoTone","Search","Option","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","SearchTree","expandedKeys","setExpandedKeys","searchValue","setSearchValue","autoExpandParent","setAutoExpandParent","onExpand","expandedkeys","onChange","e","value","target","map","indexOf","filter","self","loop","console","log","width","fontSize","newData","_","setData","paddingLeft","default","description","treeData","isLeaf","newDataDefault","undefined","selectValue","setSelectValue","margin","menu","ev","paddingTop"],"mappings":"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","sourcesContent":["import { Tree, Input, Select, Button } from 'antd';\nimport React, { useState } from 'react'\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n    const preKey = _preKey || '0';\n    const tns = _tns || gData;\n\n    const children = [];\n    for (let i = 0; i < x; i++) {\n        const key = `${preKey}-${i}`;\n        tns.push({ title: key, key });\n        if (i < y) {\n            children.push(key);\n        }\n    }\n    if (_level < 0) {\n        return tns;\n    }\n    const level = _level - 1;\n    children.forEach((key, index) => {\n        tns[index].children = [];\n        return generateData(level, key, tns[index].children);\n    });\n};\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const { key } = node;\n        dataList.push({ key, title: key });\n        if (node.children) {\n            generateList(node.children);\n        }\n    }\n};\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n    let parentKey;\n    for (let i = 0; i < tree.length; i++) {\n        const node = tree[i];\n        if (node.children) {\n            if (node.children.some(item => item.key === key)) {\n                parentKey = node.key;\n            } else if (getParentKey(key, node.children)) {\n                parentKey = getParentKey(key, node.children);\n            }\n        }\n    }\n    return parentKey;\n};\n\nconst SearchTree = () => {\n    const [expandedKeys, setExpandedKeys] = useState([])\n    const [searchValue, setSearchValue] = useState('')\n    const [autoExpandParent, setAutoExpandParent] = useState(true)\n\n    const onExpand = expandedkeys => {\n        setExpandedKeys(expandedkeys)\n        setAutoExpandParent(false)\n    }\n\n    const onChange = e => {\n        const { value } = e.target;\n        const expandedkeys = dataList\n            .map(item => {\n                if (item.title.indexOf(value) > -1) {\n                    return getParentKey(item.key, gData);\n                }\n                return null;\n            })\n            .filter((item, i, self) => item && self.indexOf(item) === i);\n        setExpandedKeys(expandedkeys)\n        setSearchValue(value)\n        setAutoExpandParent(true)\n    };\n\n    const loop = data =>\n        data.map((item, index) => {\n            console.log(item)\n            const title =                   \n                item.title === 'input' ? <>\n                  <Input\n                    style={{ width: '202px' }}\n                    // onClick={() => {\n                    //   if(elRefs.current[index].current) {\n                    //     elRefs.current[index].current.focus()\n                    //   }\n                    // }}\n                    // ref={elRefs.current[index]}\n                    placeholder=\"Enter new folder name\" />\n                </> : \n                item.title === 'select' ? <>\n                <Select\n                //   defaultValue={chil.default}\n                  style={{ width: '202px' }}\n                //   onChange={(sc) => {\n                //     const newData = data\n                //     newData[index].children[cid].default = sc\n                //     newData[index].children[cid+1].default = []\n                //     const children = newData[index].children.filter(e => e.title !== 'selectall')\n                //     if (sc === 'one') {\n                //       newData[index].children = children\n                //       newData[index].description = 'Visible to specific users'\n                //     }\n                //     if (sc === 'all') {\n                //       newData[index].description = 'Visible to Everyone'\n                //       newData[index].children = [\n                //         children[0],\n                //         newDataDefault.children[1],\n                //         children[1],\n                //       ]\n                //     }\n                //     setData([...newData])\n                    \n                //   }}\n                >\n                  <Option value=\"all\">Visible to Everyone</Option>\n                  <Option value=\"one\">Visible to specific users</Option>\n                </Select>\n              </> : item.title === 'selectall' ? <>\n                <Select\n                //   defaultValue={chil.default}\n                  placeholder=\"Select a name\"\n                  mode=\"multiple\"\n                  style={{ width: '202px' }}\n                //   onChange={(sla) => {\n                //     const newData = data\n                //     newData[index].children[cid].default = sla\n                //     setData([...newData])\n                    \n                //   }}\n                >\n                  <Option value=\"jack\">Jack</Option>\n                  <Option value=\"lucy\">Lucy</Option>\n                </Select>\n              </> : item.title === 'action' ? <>\n                <div\n                  className=\"g-action\"\n                  style={{\n                    width: '202px',\n                  }}\n                >\n                  <SaveTwoTone\n                    twoToneColor=\"#44AEA0\"\n                    style={{ fontSize: '25px' }}\n                    onClick={() => {\n                    //   const newData = data\n                    //   const folderName = elRefs.current[index].current.state.value\n                    //   if (!folderName) return\n                    //   newData[index].title = 'label'\n                    //   newData[index].default = folderName\n                    //   setData([...newData])\n                    }}\n                  />\n                  <DeleteTwoTone\n                    twoToneColor=\"#D3455C\"\n                    style={{ fontSize: '25px' }}\n                    onClick={() => {\n                      const newData = data.filter((_, i) => index !== i)\n                      setData([...newData])\n                    }}\n                  />\n\n                </div>\n              </> : \n                \n                <>\n                    <span style={{ paddingLeft: '10px'}}>{item.default}</span>\n                    <br></br>\n                    <span style={{ paddingLeft: '35px', fontSize: '11px' }}>{item.description}</span>\n                </>\n              \n            if (item.children) {\n                return {\n                    title,\n                    key: `${index}-${index}`,\n                    children: loop(item.children)\n                }\n            }\n\n            return {\n                title,\n                key: index,\n            }\n        })\n\n        const treeData = [\n            {\n              title: \"label\",\n              description: 'Visible to Everyone',\n              key: \"0\",\n              default: 'My folder name 1',\n              children: [\n                {\n                  title: \"select\",\n                  default: 'all',\n                  key: \"0-0\",\n                  isLeaf: true\n                },\n                {\n                  title: \"selectall\",\n                  default: ['lucy'],\n                  key: \"0-1\",\n                  isLeaf: true\n                },\n                {\n                  title: 'action',\n                  key: \"0-2\",\n                  isLeaf: true\n                }\n              ]\n            },\n          ];\n\n        const [data, setData] = useState(treeData)\n          const newDataDefault = {\n            title: \"input\",\n            description: 'Visible to Everyone',\n            default: '',\n            children: [\n              {\n                title: \"select\",\n                default: 'all',\n                isLeaf: true\n              },\n              {\n                title: \"selectall\",\n                default: [],\n                isLeaf: true\n              },\n              {\n                title: 'action',\n                isLeaf: true\n              }\n            ]\n          }\n\n    const [selectValue, setSelectValue] = useState(undefined)\n    return (\n        <div style={{ width: \"400px\", margin: '30px auto' }}>\n            {/* <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={onChange} />\n        <Tree\n          onExpand={onExpand}\n          draggable\n          expandedKeys={expandedKeys}\n          autoExpandParent={autoExpandParent}\n          treeData={loop(gData)}\n        /> */}\n            <Select\n                labelInValue\n                // defaultValue={{ value: 'lucy' }}\n                style={{ width: 400 }}\n                value={selectValue}\n                dropdownRender={(menu) => {\n                    return <div\n                    >\n                        {/* <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={onChange} /> */}\n                        <div className=\"g-search-header\">\n              <Search\n                placeholder=\"Search\"\n                style={{ width: '254px' }}\n                onChange={(ev) => {\n                //   const textSearch = ev.target.value\n                //   setSearch(textSearch) \n                }}\n              />\n              <Button\n                onClick={() => {\n                  const newData = [newDataDefault,...data]\n                  setData(newData)\n                }}\n              >\n                Add New Folder\n              </Button>\n            </div>\n                        <Tree\n                            draggable\n                            blockNode\n                            className=\"draggable-tree\"\n                            height={400}\n                            defaultExpandAll\n                            treeData={loop(data)}\n                            showIcon\n                            icon={<FolderFilled style={{ fontSize: '20px', paddingTop: '10px' }} />}\n                        />\n                        {menu}\n                    </div>\n                }}\n                onChange={(ev) => {\n                    console.log(ev)\n                }}\n            >\n                <Option value=\"lucy\">Lucy (101)</Option>\n            </Select>,\n        </div>\n    );\n}\n\nexport default SearchTree"]},"metadata":{},"sourceType":"module"}