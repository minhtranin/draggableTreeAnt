{"ast":null,"code":"import _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/MyModal.js\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select } from \"antd\";\nimport { FolderFilled } from \"@ant-design/icons\";\nimport './styles.css';\nvar TreeNode = TreeSelect.TreeNode;\nvar Option = Select.Option;\nvar Search = Input.Search;\n\nvar Model = function Model() {\n  var focusDiv = useRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var onChange = function onChange(value) {\n    setValue(value);\n  };\n\n  var treeData = [{\n    title: \"asda\",\n    key: \"0-0\",\n    children: [{\n      title: \"leaf 0-0\",\n      key: \"0-0-0\",\n      isLeaf: true\n    }, {\n      title: \"leaf 0-1\",\n      key: \"0-0-1\",\n      isLeaf: true\n    }]\n  }, {\n    title: \"parent 1\",\n    key: \"0-1\",\n    children: [{\n      title: \"leaf 1-0\",\n      key: \"0-1-0\",\n      isLeaf: true\n    }, {\n      title: \"leaf 1-1\",\n      key: \"0-1-1\",\n      isLeaf: true\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Search\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TreeSelect, {\n    treeIcon: true,\n    className: \"g-tree-select\",\n    style: {\n      marginBottom: 8,\n      width: '100%'\n    },\n    dropdownStyle: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    placeholder: \"Please select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TreeNode, {\n    key: 1,\n    icon: /*#__PURE__*/React.createElement(FolderFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }),\n    selectable: false,\n    title: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n      onClick: function onClick() {\n        focusDiv.current.focus();\n      },\n      ref: focusDiv,\n      placeholder: \"Enter new folder name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"lucy\",\n      style: {\n        width: '100px'\n      },\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"jack\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"lucy\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Lucy\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TreeNode, {\n    key: 2,\n    icon: /*#__PURE__*/React.createElement(FolderFilled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }),\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"s\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Another Column\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Click here\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Model;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/MyModal.js"],"names":["React","useState","useRef","useEffect","TreeSelect","Input","Select","FolderFilled","TreeNode","Option","Search","Model","focusDiv","value","setValue","onChange","treeData","title","key","children","isLeaf","width","margin","marginBottom","maxHeight","overflow","current","focus","handleChange"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { TreeSelect, Input, Select } from \"antd\";\nimport { FolderFilled } from \"@ant-design/icons\";\nimport './styles.css'\nconst { TreeNode } = TreeSelect;\nconst { Option } = Select;\nconst { Search } = Input;\n\n\nconst Model = () => {\n  const focusDiv = useRef();\n  const [value, setValue] = useState();\n  const onChange = (value) => {\n    setValue(value);\n  };\n\n\n  const treeData = [\n    {\n      title: \"asda\",\n      key: \"0-0\",\n      children: [\n        {\n          title: \"leaf 0-0\",\n          key: \"0-0-0\",\n          isLeaf: true\n        },\n        {\n          title: \"leaf 0-1\",\n          key: \"0-0-1\",\n          isLeaf: true\n        }\n      ]\n    },\n    {\n      title: \"parent 1\",\n      key: \"0-1\",\n      children: [\n        {\n          title: \"leaf 1-0\",\n          key: \"0-1-0\",\n          isLeaf: true\n        },\n        {\n          title: \"leaf 1-1\",\n          key: \"0-1-1\",\n          isLeaf: true\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div style={{ width: \"400px\", margin: '30px auto' }}>\n      <Search\n        placeholder=\"Search\"\n        onChange={onChange}\n      />\n      <TreeSelect\n        treeIcon\n        className='g-tree-select'\n        style={{ marginBottom: 8, width: '100%' }}\n        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n        placeholder=\"Please select\"\n      >\n        <TreeNode\n          key={1}\n          icon={<FolderFilled />}\n          selectable={false}\n          title={\n            <>\n              <Input onClick={() => {\n                focusDiv.current.focus()\n              }} ref={focusDiv} placeholder=\"Enter new folder name\" />\n              <Select defaultValue=\"lucy\" style={{ width: '100px' }} onChange={handleChange}>\n                <Option value=\"jack\">Jack</Option>\n                <Option value=\"lucy\">Lucy</Option>\n              </Select>\n            </>\n          }\n        >\n          <TreeNode\n            key={2}\n            icon={<FolderFilled />}\n            title={\n              <div>\n                <span>s</span>\n                <span>Another Column</span>\n                <button>Click here</button>\n              </div>\n            }\n          />\n        </TreeNode>\n      </TreeSelect>\n    </div>\n  );\n};\n\nexport default Model;\n"]},"metadata":{},"sourceType":"module"}