{"ast":null,"code":"import _toConsumableArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/minhtranin/work/treenode/src/Dragable.js\";\n\nimport { Tree, Input, Select, Button } from 'antd';\nimport React, { useState } from 'react';\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nvar Search = Input.Search;\nvar Option = Select.Option;\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar oData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || oData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nvar dataList = [];\n\nvar generateList = function generateList(data) {\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    var key = node.key;\n    dataList.push({\n      key: key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(oData);\n\nvar SearchTree = function SearchTree() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedKeys = _useState2[0],\n      setExpandedKeys = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchValue = _useState4[0],\n      setSearchValue = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      autoExpandParent = _useState6[0],\n      setAutoExpandParent = _useState6[1];\n\n  var _useState7 = useState(oData),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gData = _useState8[0],\n      setGData = _useState8[1];\n\n  var onDragEnter = function onDragEnter(info) {\n    console.log(info);\n    setExpandedKeys(info.expandedKeys); // expandedKeys 需要受控时设置\n    // this.setState({\n    //   expandedKeys: info.expandedKeys,\n    // });\n  };\n\n  var onDrop = function onDrop(info) {\n    console.log(info);\n    var dropKey = info.node.key;\n    var dragKey = info.dragNode.key;\n    var dropPos = info.node.pos.split('-');\n    var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n    var loop = function loop(data, key, callback) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].key === key) {\n          return callback(data[i], i, data);\n        }\n\n        if (data[i].children) {\n          loop(data[i].children, key, callback);\n        }\n      }\n    };\n\n    var data = _toConsumableArray(gData); // Find dragObject\n\n\n    var dragObj;\n    loop(data, dragKey, function (item, index, arr) {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n\n    if (!info.dropToGap) {\n      // Drop on the content\n      loop(data, dropKey, function (item) {\n        item.children = item.children || []; // where to insert 示例添加到头部，可以是随意位置\n\n        item.children.unshift(dragObj);\n      });\n    } else if ((info.node.props.children || []).length > 0 && // Has children\n    info.node.props.expanded && // Is expanded\n    dropPosition === 1 // On the bottom gap\n    ) {\n      loop(data, dropKey, function (item) {\n        item.children = item.children || []; // where to insert 示例添加到头部，可以是随意位置\n\n        item.children.unshift(dragObj); // in previous version, we use item.children.push(dragObj) to insert the\n        // item to the tail of the children\n      });\n    } else {\n      var ar;\n      var i;\n      loop(data, dropKey, function (item, index, arr) {\n        ar = arr;\n        i = index;\n      });\n\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    }\n\n    setGData(data);\n  };\n\n  var treeData = [{\n    title: \"label\",\n    description: 'Visible to Everyone',\n    key: \"0\",\n    default: 'My folder name 1',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      key: \"0-0\",\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: ['lucy'],\n      key: \"0-1\",\n      isLeaf: true\n    }, {\n      title: 'action',\n      key: \"0-2\",\n      isLeaf: true\n    }]\n  }];\n\n  var _useState9 = useState(treeData),\n      _useState10 = _slicedToArray(_useState9, 2),\n      data = _useState10[0],\n      setData = _useState10[1];\n\n  var newDataDefault = {\n    title: \"input\",\n    description: 'Visible to Everyone',\n    default: '',\n    children: [{\n      title: \"select\",\n      default: 'all',\n      isLeaf: true\n    }, {\n      title: \"selectall\",\n      default: [],\n      isLeaf: true\n    }, {\n      title: 'action',\n      isLeaf: true\n    }]\n  };\n\n  var _useState11 = useState(undefined),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectValue = _useState12[0],\n      setSelectValue = _useState12[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: '30px auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelInValue: true // defaultValue={{ value: 'lucy' }}\n    ,\n    style: {\n      width: 400\n    },\n    value: selectValue,\n    dropdownRender: function dropdownRender(menu) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"g-search-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        placeholder: \"Search\",\n        style: {\n          width: '254px'\n        },\n        onChange: function onChange(ev) {//   const textSearch = ev.target.value\n          //   setSearch(textSearch) \n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          var newData = [newDataDefault].concat(_toConsumableArray(data));\n          setData(newData);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }\n      }, \"Add New Folder\")), /*#__PURE__*/React.createElement(Tree, {\n        className: \"draggable-tree\",\n        defaultExpandedKeys: expandedKeys,\n        draggable: true,\n        blockNode: true,\n        onDragEnter: onDragEnter,\n        onDrop: onDrop,\n        treeData: gData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }), menu);\n    },\n    onChange: function onChange(ev) {\n      console.log(ev);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"lucy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Lucy (101)\")), \",\");\n};\n\nexport default SearchTree;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/Dragable.js"],"names":["Tree","Input","Select","Button","React","useState","FolderFilled","DeleteTwoTone","SaveTwoTone","Search","Option","x","y","z","oData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","SearchTree","expandedKeys","setExpandedKeys","searchValue","setSearchValue","autoExpandParent","setAutoExpandParent","gData","setGData","onDragEnter","info","console","log","onDrop","dropKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","callback","dragObj","item","arr","splice","dropToGap","unshift","props","expanded","ar","treeData","description","default","isLeaf","setData","newDataDefault","undefined","selectValue","setSelectValue","width","margin","menu","ev","newData"],"mappings":"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","sourcesContent":["import { Tree, Input, Select, Button } from 'antd';\nimport React, { useState } from 'react'\nimport { FolderFilled, DeleteTwoTone, SaveTwoTone } from \"@ant-design/icons\";\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst oData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n    const preKey = _preKey || '0';\n    const tns = _tns || oData;\n\n    const children = [];\n    for (let i = 0; i < x; i++) {\n        const key = `${preKey}-${i}`;\n        tns.push({ title: key, key });\n        if (i < y) {\n            children.push(key);\n        }\n    }\n    if (_level < 0) {\n        return tns;\n    }\n    const level = _level - 1;\n    children.forEach((key, index) => {\n        tns[index].children = [];\n        return generateData(level, key, tns[index].children);\n    });\n};\n\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const { key } = node;\n        dataList.push({ key, title: key });\n        if (node.children) {\n            generateList(node.children);\n        }\n    }\n};\ngenerateList(oData);\n\nconst SearchTree = () => {\n    const [expandedKeys, setExpandedKeys] = useState([])\n    const [searchValue, setSearchValue] = useState('')\n    const [autoExpandParent, setAutoExpandParent] = useState(true)\n    const [gData, setGData] = useState(oData)\n\n    const onDragEnter = info => {\n        console.log(info);\n        setExpandedKeys(info.expandedKeys)\n        // expandedKeys 需要受控时设置\n        // this.setState({\n        //   expandedKeys: info.expandedKeys,\n        // });\n    };\n    const onDrop = info => {\n        console.log(info);\n        const dropKey = info.node.key;\n        const dragKey = info.dragNode.key;\n        const dropPos = info.node.pos.split('-');\n        const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n        const loop = (data, key, callback) => {\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].key === key) {\n                    return callback(data[i], i, data);\n                }\n                if (data[i].children) {\n                    loop(data[i].children, key, callback);\n                }\n            }\n        };\n        const data = [...gData];\n\n        // Find dragObject\n        let dragObj;\n        loop(data, dragKey, (item, index, arr) => {\n            arr.splice(index, 1);\n            dragObj = item;\n        });\n\n        if (!info.dropToGap) {\n            // Drop on the content\n            loop(data, dropKey, item => {\n                item.children = item.children || [];\n                // where to insert 示例添加到头部，可以是随意位置\n                item.children.unshift(dragObj);\n            });\n        } else if (\n            (info.node.props.children || []).length > 0 && // Has children\n            info.node.props.expanded && // Is expanded\n            dropPosition === 1 // On the bottom gap\n        ) {\n            loop(data, dropKey, item => {\n                item.children = item.children || [];\n                // where to insert 示例添加到头部，可以是随意位置\n                item.children.unshift(dragObj);\n                // in previous version, we use item.children.push(dragObj) to insert the\n                // item to the tail of the children\n            });\n        } else {\n            let ar;\n            let i;\n            loop(data, dropKey, (item, index, arr) => {\n                ar = arr;\n                i = index;\n            });\n            if (dropPosition === -1) {\n                ar.splice(i, 0, dragObj);\n            } else {\n                ar.splice(i + 1, 0, dragObj);\n            }\n        }\n        setGData(data)\n    };\n\n\n\n\n    const treeData = [\n        {\n            title: \"label\",\n            description: 'Visible to Everyone',\n            key: \"0\",\n            default: 'My folder name 1',\n            children: [\n                {\n                    title: \"select\",\n                    default: 'all',\n                    key: \"0-0\",\n                    isLeaf: true\n                },\n                {\n                    title: \"selectall\",\n                    default: ['lucy'],\n                    key: \"0-1\",\n                    isLeaf: true\n                },\n                {\n                    title: 'action',\n                    key: \"0-2\",\n                    isLeaf: true\n                }\n            ]\n        },\n    ];\n\n    const [data, setData] = useState(treeData)\n    const newDataDefault = {\n        title: \"input\",\n        description: 'Visible to Everyone',\n        default: '',\n        children: [\n            {\n                title: \"select\",\n                default: 'all',\n                isLeaf: true\n            },\n            {\n                title: \"selectall\",\n                default: [],\n                isLeaf: true\n            },\n            {\n                title: 'action',\n                isLeaf: true\n            }\n        ]\n    }\n\n    const [selectValue, setSelectValue] = useState(undefined)\n\n    return (\n        <div style={{ width: \"400px\", margin: '30px auto' }}>\n            <Select\n                labelInValue\n                // defaultValue={{ value: 'lucy' }}\n                style={{ width: 400 }}\n                value={selectValue}\n                dropdownRender={(menu) => {\n                    return <div\n                    >\n                        {/* <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={onChange} /> */}\n                        <div className=\"g-search-header\">\n                            <Search\n                                placeholder=\"Search\"\n                                style={{ width: '254px' }}\n                                onChange={(ev) => {\n                                    //   const textSearch = ev.target.value\n                                    //   setSearch(textSearch) \n                                }}\n                            />\n                            <Button\n                                onClick={() => {\n                                    const newData = [newDataDefault, ...data]\n                                    setData(newData)\n                                }}\n                            >\n                                Add New Folder\n                            </Button>\n                        </div>\n                        <Tree\n                            className=\"draggable-tree\"\n                            defaultExpandedKeys={expandedKeys}\n                            draggable\n                            blockNode\n                            onDragEnter={onDragEnter}\n                            onDrop={onDrop}\n                            treeData={gData}\n                        />\n                        {menu}\n                    </div>\n                }}\n                onChange={(ev) => {\n                    console.log(ev)\n                }}\n            >\n                <Option value=\"lucy\">Lucy (101)</Option>\n            </Select>,\n        </div>\n    );\n}\n\nexport default SearchTree"]},"metadata":{},"sourceType":"module"}