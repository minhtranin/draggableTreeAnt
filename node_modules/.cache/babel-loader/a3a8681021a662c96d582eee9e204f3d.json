{"ast":null,"code":"import _classCallCheck from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/minhtranin/work/treenode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/minhtranin/work/treenode/src/Dragable.js\";\nimport { Tree, Input } from 'antd';\nvar Search = Input.Search;\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar gData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || gData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nvar dataList = [];\n\nvar generateList = function generateList(data) {\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    var key = node.key;\n    dataList.push({\n      key: key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(gData);\n\nvar getParentKey = function getParentKey(key, tree) {\n  var parentKey;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(function (item) {\n        return item.key === key;\n      })) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nvar SearchTree = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchTree, _React$Component);\n\n  var _super = _createSuper(SearchTree);\n\n  function SearchTree() {\n    var _this;\n\n    _classCallCheck(this, SearchTree);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true\n    };\n\n    _this.onExpand = function (expandedKeys) {\n      _this.setState({\n        expandedKeys: expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    _this.onChange = function (e) {\n      var value = e.target.value;\n      var expandedKeys = dataList.map(function (item) {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n\n      _this.setState({\n        expandedKeys: expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchTree, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          searchValue = _this$state.searchValue,\n          expandedKeys = _this$state.expandedKeys,\n          autoExpandParent = _this$state.autoExpandParent;\n\n      var loop = function loop(data) {\n        return data.map(function (item) {\n          var index = item.title.indexOf(searchValue);\n          var beforeStr = item.title.substr(0, index);\n          var afterStr = item.title.substr(index + searchValue.length);\n          var title = index > -1 ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }\n          }, beforeStr, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"site-tree-search-value\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }\n          }, searchValue), afterStr) : /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }\n          }, item.title);\n\n          if (item.children) {\n            return {\n              title: title,\n              key: item.key,\n              children: loop(item.children)\n            };\n          }\n\n          return {\n            title: title,\n            key: item.key\n          };\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        style: {\n          marginBottom: 8\n        },\n        placeholder: \"Search\",\n        onChange: this.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Tree, {\n        onExpand: this.onExpand,\n        expandedKeys: expandedKeys,\n        autoExpandParent: autoExpandParent,\n        treeData: loop(gData),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SearchTree;\n}(React.Component);\n\nexport default SearchTree;","map":{"version":3,"sources":["/home/minhtranin/work/treenode/src/Dragable.js"],"names":["Tree","Input","Search","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","SearchTree","state","expandedKeys","searchValue","autoExpandParent","onExpand","setState","onChange","e","value","target","map","indexOf","filter","self","loop","beforeStr","substr","afterStr","marginBottom","React","Component"],"mappings":"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","sourcesContent":["import { Tree, Input } from 'antd';\n\nconst { Search } = Input;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const { key } = node;\n    dataList.push({ key, title: key });\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n  return parentKey;\n};\n\nclass SearchTree extends React.Component {\n  state = {\n    expandedKeys: [],\n    searchValue: '',\n    autoExpandParent: true,\n  };\n\n  onExpand = expandedKeys => {\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n    const expandedKeys = dataList\n      .map(item => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n        return null;\n      })\n      .filter((item, i, self) => item && self.indexOf(item) === i);\n    this.setState({\n      expandedKeys,\n      searchValue: value,\n      autoExpandParent: true,\n    });\n  };\n\n  render() {\n    const { searchValue, expandedKeys, autoExpandParent } = this.state;\n    const loop = data =>\n      data.map(item => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n          index > -1 ? (\n            <span>\n              {beforeStr}\n              <span className=\"site-tree-search-value\">{searchValue}</span>\n              {afterStr}\n            </span>\n          ) : (\n            <span>{item.title}</span>\n          );\n        if (item.children) {\n          return { title, key: item.key, children: loop(item.children) };\n        }\n\n        return {\n          title,\n          key: item.key,\n        };\n      });\n    return (\n      <div>\n        <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={this.onChange} />\n        <Tree\n          onExpand={this.onExpand}\n          expandedKeys={expandedKeys}\n          autoExpandParent={autoExpandParent}\n          treeData={loop(gData)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchTree"]},"metadata":{},"sourceType":"module"}